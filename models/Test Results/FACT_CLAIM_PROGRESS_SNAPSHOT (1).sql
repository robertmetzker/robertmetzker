{{ config( 
tags = [ "fact" ] 
,	 post_hook = ("
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD PRIMARY KEY (CLAIM_NUMBER);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT FILING_IW_FK FOREIGN KEY (INJURED_WORKER_HKEY) REFERENCES DIMENSIONS.DIM_INJURED_WORKER (INJURED_WORKER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT FILING_FILE_DATE_FK FOREIGN KEY (INITIAL_FILE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT FILING_EMPLOYER_FK FOREIGN KEY (EMPLOYER_HKEY) REFERENCES DIMENSIONS.DIM_EMPLOYER (EMPLOYER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_OCCURANCE_DATE_fk FOREIGN KEY (OCCURRENCE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ENTRY_USER_fk FOREIGN KEY (ENTRY_USER_HKEY) REFERENCES DIMENSIONS.DIM_USER (USER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_PRIMARY_ICD_fk FOREIGN KEY (PRIMARY_ICD_HKEY) REFERENCES DIMENSIONS.DIM_ICD (ICD_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_DETERMINATION_DATE_fk FOREIGN KEY (FIRST_DETERMINATION_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_RELEASE_DATE_fk FOREIGN KEY (CLAIM_RELEASE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_SRC_SYS_CREATE_DATE_fk FOREIGN KEY (SOURCE_SYTEM_CREATE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_MED_DATE_fk FOREIGN KEY (FIRST_MEDICAL_PAYMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_MED_DATE_fk FOREIGN KEY (LAST_MEDICAL_PAYMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_INDEMNITY_PAYMENT_DATE_fk FOREIGN KEY (LAST_INDEMNITY_PAYMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_MEDICAL_SERVICE_DATE_fk FOREIGN KEY (LAST_MEDICAL_SERVICE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_PRIMARY_CSS_HKEY FOREIGN KEY (PRIMARY_CSS_HKEY) REFERENCES DIMENSIONS.DIM_USER (USER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ACP_START_DATE_fk FOREIGN KEY (ACP_START_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ACP_END_DATE_fk FOREIGN KEY (ACP_END_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_INVESTIGATION_fk FOREIGN KEY (INVESTIGATION_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_INVESTIGATION (CLAIM_INVESTIGATION_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_PAYMENT_TOTAL_DATE_fk FOREIGN KEY (PAYMENT_AMOUNTS_AS_OF_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_POLICY_STANDIING_fk FOREIGN KEY (POLICY_STANDING_HKEY) REFERENCES DIMENSIONS.DIM_POLICY_STANDING (POLICY_STANDING_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_MED_SERVICE_DATE_fk FOREIGN KEY (FIRST_MEDICAL_SERVICE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_INDEMNITY_PAYMENT_DATE_KEY FOREIGN KEY (FIRST_INDEMNITY_PAYMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_MCO_ASSIGNED_fk FOREIGN KEY (MCO_ASSIGNED_HKEY) REFERENCES DIMENSIONS.DIM_NETWORK (NETWORK_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ORGANIZATIONAL_UNIT_fk FOREIGN KEY (ORGANIZATIONAL_UNIT_HKEY) REFERENCES DIMENSIONS.DIM_ORGANIZATIONAL_UNIT (ORGANIZATION_UNIT_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_DAY_WORK_DATE_KEY FOREIGN KEY (LAST_DAY_AT_WORK_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ARTW_DATE_KEY FOREIGN KEY (ACTUAL_RETURN_TO_WORK_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_ERTW_DATE_KEY FOREIGN KEY (ESTIMATED_RETURN_TO_WORK_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_MANUAL_CLASSIFICATION_fk FOREIGN KEY (MANUAL_CLASS_CODE_HKEY) REFERENCES DIMENSIONS.DIM_MANUAL_CLASSIFICATION (MANUAL_CLASS_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_FILE_DATE_fk FOREIGN KEY (FILE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPHOT_DETERMINATION_USER_fk FOREIGN KEY (DETERMINATION_USER_HKEY) REFERENCES DIMENSIONS.DIM_USER (USER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LOAD_DATETIME SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PRIMARY_SOURCE_SYSTEM SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PRIMARY_SOURCE_SYSTEM VARCHAR();
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_NUMBER SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FILE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY OCCURRENCE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY INJURED_WORKER_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PRIMARY_ICD_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY EMPLOYER_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ENTRY_USER_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY SOURCE_SYTEM_CREATE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_RELEASE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_DETERMINATION_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ACP_START_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ACP_END_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PRIMARY_CSS_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY INVESTIGATION_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_MEDICAL_PAYMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LAST_MEDICAL_PAYMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LAST_INDEMNITY_PAYMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LAST_MEDICAL_SERVICE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PAYMENT_AMOUNTS_AS_OF_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY POLICY_STANDING_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_INDEMNITY_PAYMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_MEDICAL_SERVICE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY INITIAL_FILE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY MANUAL_CLASS_CODE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY DETERMINATION_USER_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ORGANIZATIONAL_UNIT_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LAST_DAY_AT_WORK_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY MCO_ASSIGNED_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ESTIMATED_RETURN_TO_WORK_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ACTUAL_RETURN_TO_WORK_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY INDUSTRY_GROUP_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_POR_VISIT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_TYPE_STATUS_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_DETAIL_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_ACCIDENT_DESC_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_DISABILITY_TYPE_fk FOREIGN KEY (DISABILITY_TYPE_HKEY) REFERENCES DIMENSIONS.DIM_DISABILITY_TYPE (DISABILITY_TYPE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY DISABILITY_TYPE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_TYPE_STATUS_fk FOREIGN KEY (CLAIM_TYPE_STATUS_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_TYPE_STATUS (CLAIM_TYPE_STATUS_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_DETAIL_fk FOREIGN KEY (CLAIM_DETAIL_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_DETAIL (CLAIM_DETAIL_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_PROGRESS_SNAPSHOT_INDUSTRY_GROUP_fk_fk FOREIGN KEY (INDUSTRY_GROUP_HKEY) REFERENCES DIMENSIONS.DIM_INDUSTRY_GROUP (INDUSTRY_GROUP_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_POR_VISIT_DATE_fk FOREIGN KEY (FIRST_POR_VISIT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_ACCIDENT_DESC_fk FOREIGN KEY (CLAIM_ACCIDENT_DESC_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_ACCIDENT_DESCRIPTION (CLAIM_ACCIDENT_DESC_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CATASTROPHIC_INJURY_TYPE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CATASTROPHIC_EFFECTIVE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CATASTROPHIC_EXPIRATION_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CATASTROPHIC_EFFECTIVE_DATE_fk FOREIGN KEY (CATASTROPHIC_EFFECTIVE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CATASTROPHIC_EXPIRATION_DATE_fk FOREIGN KEY (CATASTROPHIC_EXPIRATION_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE_fk FOREIGN KEY (EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE_fk FOREIGN KEY (EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT R_736 FOREIGN KEY (CATASTROPHIC_INJURY_TYPE_HKEY) REFERENCES DIMENSIONS.DIM_CATASTROPHIC_INJURY_TYPE (CATASTROPHIC_INJURY_TYPE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_EMPLOYER_PAID_PRGRM_ENTRY_DATE_fk FOREIGN KEY (EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_FIRST_ASSIGNMENT_DATE_KEY_fk FOREIGN KEY (FIRST_ASSIGNMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_LAST_ASSIGNMENT_DATE_KEY_fk FOREIGN KEY (LAST_ASSIGNMENT_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY FIRST_ASSIGNMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY LAST_ASSIGNMENT_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_POLICY_ORIGINAL_EFFECTIVE_DATE_KEY_fk FOREIGN KEY (POLICY_ORIGINAL_EFFECTIVE_DATE_KEY) REFERENCES DIMENSIONS.DIM_DATE (DATE_KEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY POLICY_ORIGINAL_EFFECTIVE_DATE_KEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_CAUSE_TYPE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_CAUSE_TYPE_fk FOREIGN KEY (CLAIM_CAUSE_TYPE_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_CAUSE_TYPE (CLAIM_CAUSE_TYPE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_PROGRESS_SNAPSHOT_INDUSTRY_GROUP_fk_fk FOREIGN KEY (MANUAL_CLASS_INDUSTRY_GROUP_HKEY) REFERENCES DIMENSIONS.DIM_INDUSTRY_GROUP (INDUSTRY_GROUP_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT R_912 FOREIGN KEY (PROVIDER_OF_RECORD_HKEY) REFERENCES DIMENSIONS.DIM_PROVIDER (PROVIDER_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT R_913 FOREIGN KEY (ATTORNEY_OF_RECORD_HKEY) REFERENCES DIMENSIONS.DIM_REPRESENTATIVE (REPRESENTATIVE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT R_914 FOREIGN KEY (EMPLOYER_REPRESENTATIVE_HKEY) REFERENCES DIMENSIONS.DIM_REPRESENTATIVE (REPRESENTATIVE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_CLAIM_COVID_PROFILE_fk FOREIGN KEY (CLAIM_COVID_PROFILE_HKEY) REFERENCES DIMENSIONS.DIM_CLAIM_COVID_PROFILE (CLAIM_COVID_PROFILE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT ADD CONSTRAINT CLAIM_PROGRESS_SNAPSHOT_INSURED_REPRESENTATIVE_fk FOREIGN KEY (INSURED_REPRESENTATIVE_HKEY) REFERENCES DIMENSIONS.DIM_REPRESENTATIVE (REPRESENTATIVE_HKEY);
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY MANUAL_CLASS_INDUSTRY_GROUP_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY PROVIDER_OF_RECORD_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY ATTORNEY_OF_RECORD_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY EMPLOYER_REPRESENTATIVE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLAIM_COVID_PROFILE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY INSURED_REPRESENTATIVE_HKEY SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY CLOSE_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY REOPEN_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY RECLOSE_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY STATUE_OF_LIMITATION_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY SETTLE_MEDICAL_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY SETTLE_INDEMNITY_DATE SET NOT NULL;
ALTER TABLE EDW_STG_CLAIMS_MART.FACT_CLAIM_PROGRESS_SNAPSHOT MODIFY SETTLE_BOTH_DATE SET NOT NULL;

") 
) }}

---- SRC LAYER ----
WITH

SRC_CLM            as ( SELECT *     FROM     {{ ref( 'DSV_CLAIM' ) }} ),
SRC_IW             as ( SELECT *     FROM     {{ ref( 'DIM_INJURED_WORKER' ) }} ),
SRC_P_ICD          as ( SELECT *     FROM     {{ ref( 'DIM_ICD' ) }} ),
SRC_EMP            as ( SELECT *     FROM     {{ ref( 'DIM_EMPLOYER' ) }} ),
SRC_INVEST         as ( SELECT *     FROM     {{ ref( 'DSV_CLAIM_INVESTIGATION' ) }} ),
SRC_CSPC           as ( SELECT *     FROM     {{ ref( 'DSV_CLAIM_PAYMENT_SUMMARY' ) }} ),
SRC_MC             as ( SELECT *     FROM     {{ ref( 'DIM_MANUAL_CLASSIFICATION' ) }} ),
SRC_INV            as ( SELECT *     FROM     {{ ref( 'DSV_INVOICE' ) }} ),
SRC_NTWK           as ( SELECT *     FROM     {{ ref( 'DIM_NETWORK' ) }} ),
SRC_DM             as ( SELECT *     FROM     {{ ref( 'DSV_DISABILITY_MANAGEMENT' ) }} ),
SRC_IPS            as ( SELECT *     FROM     {{ ref( 'DSV_INDEMNITY_PLAN_SCHEDULE_DETAIL_PAYMENT' ) }} ),
SRC_PRVDR          as ( SELECT *     FROM     {{ ref( 'DIM_PROVIDER' ) }} ),
SRC_ATTY           as ( SELECT *     FROM     {{ ref( 'DIM_REPRESENTATIVE' ) }} ),
SRC_REP            as ( SELECT *     FROM     {{ ref( 'DIM_REPRESENTATIVE' ) }} ),
SRC_INSRD          as ( SELECT *     FROM     {{ ref( 'DIM_REPRESENTATIVE' ) }} ),

/*
SRC_CLM            as ( SELECT *     FROM     STAGING.DSV_CLAIM ),
SRC_IW             as ( SELECT *     FROM     EDW.DIM_INJURED_WORKER ),
SRC_P_ICD          as ( SELECT *     FROM     EDW.DIM_ICD ),
SRC_EMP            as ( SELECT *     FROM     EDW.DIM_EMPLOYER ),
SRC_INVEST         as ( SELECT *     FROM     STAGING.DSV_CLAIM_INVESTIGATION ),
SRC_CSPC           as ( SELECT *     FROM     STAGING.DSV_CLAIM_PAYMENT_SUMMARY ),
SRC_MC             as ( SELECT *     FROM     EDW.DIM_MANUAL_CLASSIFICATION ),
SRC_INV            as ( SELECT *     FROM     STAGING.DSV_INVOICE ),
SRC_NTWK           as ( SELECT *     FROM     EDW.DIM_NETWORK ),
SRC_DM             as ( SELECT *     FROM     STAGING.DSV_DISABILITY_MANAGEMENT ),
SRC_IPS            as ( SELECT *     FROM     STAGING.DSV_INDEMNITY_PLAN_SCHEDULE_DETAIL_PAYMENT ),
SRC_PRVDR          as ( SELECT *     FROM     EDW.DIM_PROVIDER ),
SRC_ATTY           as ( SELECT *     FROM     EDW.DIM_REPRESENTATIVE ),
SRC_REP            as ( SELECT *     FROM     EDW.DIM_REPRESENTATIVE ),
SRC_INSRD          as ( SELECT *     FROM     EDW.DIM_REPRESENTATIVE ),

*/

---- LOGIC LAYER ----


, LOGIC_CLM as ( 
	SELECT 	  
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER	, 
		 CASE WHEN CLAIM_INITIAL_FILE_DATE is null then '-1' 
			WHEN CLAIM_INITIAL_FILE_DATE < '1901-01-01' then '-2' 
			WHEN CLAIM_INITIAL_FILE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLAIM_INITIAL_FILE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                            CLAIM_INITIAL_FILE_DATE	, 
		 CASE WHEN CLAIM_FILE_DATE is null then '-1' 
			WHEN CLAIM_FILE_DATE < '1901-01-01' then '-2' 
			WHEN CLAIM_FILE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLAIM_FILE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                    CLAIM_FILE_DATE	, 
		 CASE WHEN CLM_OCCR_DATE is null then '-1' 
			WHEN CLM_OCCR_DATE < '1901-01-01' then '-2' 
			WHEN CLM_OCCR_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLM_OCCR_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                      CLM_OCCR_DATE	, 
		 CASE WHEN INDUSTRY_GROUP_CODE is NULL 
			then MD5( 'UNK' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'INDUSTRY_GROUP_CODE' ] ) }} 
				END                                         
                                                             as                   MANUAL_CLASS_INDUSTRY_GROUP_HKEY	, 
		  {{ dbt_utils.generate_surrogate_key ( [ 'CLM_ENTRY_USER_LGN_NM' ] ) }} 
                                                             as                                    ENTRY_USER_HKEY	, 
		 cast( (DERIVED) as DATE )                          as                       SOURCE_SYTEM_CREATE_DATE_KEY	, 
		 CASE WHEN CLAIM_RELEASE_DATE is null then '-1' 
			WHEN CLAIM_RELEASE_DATE < '1901-01-01' then '-2' 
			WHEN CLAIM_RELEASE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLAIM_RELEASE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                 CLAIM_RELEASE_DATE	, 
		 CASE WHEN CLM_FIRST_DECISION_DATE is null then '-1' 
			WHEN CLM_FIRST_DECISION_DATE < '1901-01-01' then '-2' 
			WHEN CLM_FIRST_DECISION_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLM_FIRST_DECISION_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                            CLM_FIRST_DECISION_DATE	, 
		 CASE WHEN CLM_ENTRY_USER_LGN_NM is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'CLM_ENTRY_USER_LGN_NM' ] ) }} 
				END                                         
                                                             as                                   PRIMARY_CSS_HKEY	, 
		 DETERMINATION_USER_LGN_NM                          as                          DETERMINATION_USER_LGN_NM	, 
		 ORG_UNT_NM                                         as                                         ORG_UNT_NM	, 
		 CASE WHEN FIRST_ASSIGNMENT_DATE is null then '-1' 
			WHEN FIRST_ASSIGNMENT_DATE < '1901-01-01' then '-2' 
			WHEN FIRST_ASSIGNMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( FIRST_ASSIGNMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                              FIRST_ASSIGNMENT_DATE	, 
		 CASE WHEN LAST_ASSIGNMENT_DATE is null then '-1' 
			WHEN LAST_ASSIGNMENT_DATE < '1901-01-01' then '-2' 
			WHEN LAST_ASSIGNMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( LAST_ASSIGNMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                               LAST_ASSIGNMENT_DATE	, 
		 CASE WHEN FIRST_POR_VISIT_DATE is null then '-1' 
			WHEN FIRST_POR_VISIT_DATE < '1901-01-01' then '-2' 
			WHEN FIRST_POR_VISIT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( FIRST_POR_VISIT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                               FIRST_POR_VISIT_DATE	, 
		 CASE WHEN  nullif(array_to_string(array_construct_compact( POLICY_TYPE_CODE, PLCY_STS_TYP_CD, PLCY_STS_RSN_TYP_CD, POLICY_ACTIVE_IND ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'POLICY_TYPE_CODE','PLCY_STS_TYP_CD','PLCY_STS_RSN_TYP_CD','POLICY_ACTIVE_IND' ] ) }} 
				END                                         
                                                             as                               POLICY_STANDING_HKEY	, 
		 CASE WHEN LAST_DAY_AT_WORK_DATE is null then '-1' 
			WHEN LAST_DAY_AT_WORK_DATE < '1901-01-01' then '-2' 
			WHEN LAST_DAY_AT_WORK_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( LAST_DAY_AT_WORK_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                              LAST_DAY_AT_WORK_DATE	, 
		 CASE WHEN ESTIMATED_RETURN_TO_WORK_DATE is null then '-1' 
			WHEN ESTIMATED_RETURN_TO_WORK_DATE < '1901-01-01' then '-2' 
			WHEN ESTIMATED_RETURN_TO_WORK_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( ESTIMATED_RETURN_TO_WORK_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                      ESTIMATED_RETURN_TO_WORK_DATE	, 
		 CASE WHEN ACTUAL_RETURN_TO_WORK_DATE is null then '-1' 
			WHEN ACTUAL_RETURN_TO_WORK_DATE < '1901-01-01' then '-2' 
			WHEN ACTUAL_RETURN_TO_WORK_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( ACTUAL_RETURN_TO_WORK_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                         ACTUAL_RETURN_TO_WORK_DATE	, 
		 CASE WHEN  nullif(array_to_string(array_construct_compact( CURRENT_CORESUITE_CLAIM_TYPE_CODE, CLAIM_TYPE_CHNG_OVR_IND, CLAIM_STATE_CODE, CLAIM_STATUS_CODE, CLAIM_STATUS_REASON_CODE ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'CURRENT_CORESUITE_CLAIM_TYPE_CODE','CLAIM_TYPE_CHNG_OVR_IND','CLAIM_STATE_CODE','CLAIM_STATUS_CODE','CLAIM_STATUS_REASON_CODE' ] ) }} 
				END                                         
                                                             as                             CLAIM_TYPE_STATUS_HKEY	, 
		  {{ dbt_utils.generate_surrogate_key ( [ 'FILING_SOURCE_DESC','FILING_MEDIA_DESC','NATURE_OF_INJURY_CATEGORY','NATURE_OF_INJURY_TYPE','FIREFIGHTER_CANCER_IND','COVID_EXPOSURE_IND','COVID_EMERGENCY_WORKER_IND','COVID_HEALTH_CARE_WORKER_IND','COMBINED_IND','SB223_IND','EMPLOYER_PREMISES_IND','CATASTROPHIC_IND','K_PROGRAM_ENROLLMENT_DESC','K_PROGRAM_TYPE_DESC','K_PROGRAM_REASON_DESC' ] ) }} 
                                                             as                                  CLAIM_DETAIL_HKEY	, 
		 CASE WHEN  nullif(array_to_string(array_construct_compact( ACCIDENT_DESCRIPTION_TEXT, IW_JOB_TITLE ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'ACCIDENT_DESCRIPTION_TEXT','IW_JOB_TITLE' ] ) }} 
				END                                         
                                                             as                           CLAIM_ACCIDENT_DESC_HKEY	, 
		 CASE WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE is null then '-1' 
			WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE < '1901-01-01' then '-2' 
			WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as               EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE	, 
		 CASE WHEN EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE is null then '-1' 
			WHEN EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE < '1901-01-01' then '-2' 
			WHEN EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as              EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE	, 
		 CASE WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE is null then '-1' 
			WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE < '1901-01-01' then '-2' 
			WHEN EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as         EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE	, 
		 CASE WHEN  nullif(array_to_string(array_construct_compact( NATURE_OF_INJURY_CATEGORY_CODE, NATURE_OF_INJURY_TYPE_CODE, CAUSE_OF_LOSS_CATEGORY_CODE, CAUSE_OF_LOSS_TYPE_CODE, CATASTROPHIC_INJURY_TYPE_CODE, CATASTROPHIC_IND ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'NATURE_OF_INJURY_CATEGORY_CODE','NATURE_OF_INJURY_TYPE_CODE','CAUSE_OF_LOSS_CATEGORY_CODE','CAUSE_OF_LOSS_TYPE_CODE','CATASTROPHIC_INJURY_TYPE_CODE','CATASTROPHIC_IND' ] ) }} 
				END                                         
                                                             as                                   INJURY_TYPE_HKEY	, 
		 CASE WHEN CATASTROPHIC_EFFECTIVE_DATE is null then '-1' 
			WHEN CATASTROPHIC_EFFECTIVE_DATE < '1901-01-01' then '-2' 
			WHEN CATASTROPHIC_EFFECTIVE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CATASTROPHIC_EFFECTIVE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                        CATASTROPHIC_EFFECTIVE_DATE	, 
		 CASE WHEN CATASTROPHIC_EXPIRATION_DATE is null then '-1' 
			WHEN CATASTROPHIC_EXPIRATION_DATE < '1901-01-01' then '-2' 
			WHEN CATASTROPHIC_EXPIRATION_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CATASTROPHIC_EXPIRATION_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                       CATASTROPHIC_EXPIRATION_DATE	, 
		 CASE WHEN POLICY_ORIGINAL_EFFECTIVE_DATE is null then '-1' 
			WHEN POLICY_ORIGINAL_EFFECTIVE_DATE < '1901-01-01' then '-2' 
			WHEN POLICY_ORIGINAL_EFFECTIVE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( POLICY_ORIGINAL_EFFECTIVE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                     POLICY_ORIGINAL_EFFECTIVE_DATE	, 
		 CASE WHEN  nullif(array_to_string(array_construct_compact( COVID_EXPOSURE_IND, COVID_EMERGENCY_WORKER_IND, COVID_HEALTH_CARE_WORKER_IND, COVID_VACCINE_REACTION_IND ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'COVID_EXPOSURE_IND','COVID_EMERGENCY_WORKER_IND','COVID_HEALTH_CARE_WORKER_IND','COVID_VACCINE_REACTION_IND' ] ) }} 
				END                                         
                                                             as                           CLAIM_COVID_PROFILE_HKEY	, 
		 CASE WHEN SETTLE_MEDICAL_DATE is null then '-1' 
			WHEN SETTLE_MEDICAL_DATE < '1901-01-01' then '-2' 
			WHEN SETTLE_MEDICAL_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( SETTLE_MEDICAL_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                SETTLE_MEDICAL_DATE	, 
		 CASE WHEN SETTLE_INDEMNITY_DATE is null then '-1' 
			WHEN SETTLE_INDEMNITY_DATE < '1901-01-01' then '-2' 
			WHEN SETTLE_INDEMNITY_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( SETTLE_INDEMNITY_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                              SETTLE_INDEMNITY_DATE	, 
		 CASE WHEN SETTLE_BOTH_DATE is null then '-1' 
			WHEN SETTLE_BOTH_DATE < '1901-01-01' then '-2' 
			WHEN SETTLE_BOTH_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( SETTLE_BOTH_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                   SETTLE_BOTH_DATE	, 
		 CASE WHEN CLOSE_DATE is null then '-1' 
			WHEN CLOSE_DATE < '1901-01-01' then '-2' 
			WHEN CLOSE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( CLOSE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                         CLOSE_DATE	, 
		 CASE WHEN REOPEN_DATE is null then '-1' 
			WHEN REOPEN_DATE < '1901-01-01' then '-2' 
			WHEN REOPEN_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( REOPEN_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                        REOPEN_DATE	, 
		 CASE WHEN RECLOSE_DATE is null then '-1' 
			WHEN RECLOSE_DATE < '1901-01-01' then '-2' 
			WHEN RECLOSE_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( RECLOSE_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                       RECLOSE_DATE	, 
		 CASE WHEN STATUE_OF_LIMITATION_DATE is null then '-1' 
			WHEN STATUE_OF_LIMITATION_DATE < '1901-01-01' then '-2' 
			WHEN STATUE_OF_LIMITATION_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( STATUE_OF_LIMITATION_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                          STATUE_OF_LIMITATION_DATE	, 
		 POLICY_NUMBER                                      as                                      POLICY_NUMBER	, 
		 BUSINESS_SEQ_NUMBER                                as                                BUSINESS_SEQ_NUMBER	, 
		 IW_AGE_AT_OCCURRENCE                               as                               IW_AGE_AT_OCCURRENCE	, 
		 CLAIM_FILE_LAG_DAYS_COUNT                          as                          CLAIM_FILE_LAG_DAYS_COUNT	, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND FIRST_DETERMINATION_DATE
                                                             as  FROI_TO_FIRST_DATE_OF_DETERMINATION_LAG_DAY_COUNT	, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND CLAIM_CLOSED_DATE as                       FROI_TO_CLOSED_LAG_DAY_COUNT	, 
		 TOTAL_ELAPSED_MISSED_DAY_COUNT                     as                     TOTAL_ELAPSED_MISSED_DAY_COUNT	, 
		 TOTAL_ELIGIBLE_MISSED_DAY_COUNT                    as                    TOTAL_ELIGIBLE_MISSED_DAY_COUNT	, 
		 INVOICE_DISTINCT_COUNT                             as                             INVOICE_DISTINCT_COUNT	, 
		 INVOICE_LINE_DISTINCT_COUNT                        as                        INVOICE_LINE_DISTINCT_COUNT	, 
		 TOTAL_SCH_LOSS_PAID_AMT                            as                            TOTAL_SCH_LOSS_PAID_AMT	, 
		 TOTAL_NWWL_PAID_AMT                                as                                TOTAL_NWWL_PAID_AMT	, 
		 CLAIM_FILE_DATE                                    as                                    CLAIM_FILE_DATE	, 
		 IW_CUSTOMER_NUMBER                                 as                                 IW_CUSTOMER_NUMBER	, 
		 PRIMARY_ICD_CODE                                   as                                   PRIMARY_ICD_CODE	, 
		 EMP_CUSTOMER_NUMBER                                as                                EMP_CUSTOMER_NUMBER	, 
		 MANUAL_CLASS_CODE                                  as                                  MANUAL_CLASS_CODE	, 
		 DRVD_MANUAL_CLASS_SUFFIX_CODE                      as                      DRVD_MANUAL_CLASS_SUFFIX_CODE	, 
		 DETERMINATION_USER_LGN_NM                          as                          DETERMINATION_USER_LGN_NM	, 
		 ORG_UNT_NM                                         as                                         ORG_UNT_NM	, 
		 INTL_STLD_INDM_DATE                                as                                INTL_STLD_INDM_DATE	, 
		 INTL_STLD_MDCL_DATE                                as                                INTL_STLD_MDCL_DATE	, 
		 CLM_CLMT_NTF_DT                                    as                                    CLM_CLMT_NTF_DT	, 
		 CLM_EMPLR_NTF_DT                                   as                                   CLM_EMPLR_NTF_DT	, 
		 K_PROGRAM_ENROLLMENT_DESC                          as                          K_PROGRAM_ENROLLMENT_DESC	, 
		 K_PROGRAM_TYPE_DESC                                as                                K_PROGRAM_TYPE_DESC	, 
		 K_PROGRAM_REASON_CODE                              as                              K_PROGRAM_REASON_CODE	, 
		 FILING_SOURCE_DESC                                 as                                 FILING_SOURCE_DESC	, 
		 FILING_MEDIA_DESC                                  as                                  FILING_MEDIA_DESC	, 
		 NATURE_OF_INJURY_CATEGORY                          as                          NATURE_OF_INJURY_CATEGORY	, 
		 NATURE_OF_INJURY_TYPE                              as                              NATURE_OF_INJURY_TYPE	, 
		 FIREFIGHTER_CANCER_IND                             as                             FIREFIGHTER_CANCER_IND	, 
		 COVID_EXPOSURE_IND                                 as                                 COVID_EXPOSURE_IND	, 
		 COVID_EMERGENCY_WORKER_IND                         as                         COVID_EMERGENCY_WORKER_IND	, 
		 COVID_HEALTH_CARE_WORKER_IND                       as                       COVID_HEALTH_CARE_WORKER_IND	, 
		 COMBINED_IND                                       as                                       COMBINED_IND	, 
		 SB223_IND                                          as                                          SB223_IND	, 
		 EMPLOYER_PREMISES_IND                              as                              EMPLOYER_PREMISES_IND	, 
		 CATASTROPHIC_IND                                   as                                   CATASTROPHIC_IND	, 
		 CURRENT_CORESUITE_CLAIM_TYPE_CODE                  as                  CURRENT_CORESUITE_CLAIM_TYPE_CODE	, 
		 CLAIM_STATE_CODE                                   as                                   CLAIM_STATE_CODE	, 
		 CLAIM_STATUS_CODE                                  as                                  CLAIM_STATUS_CODE	, 
		 CLAIM_STATUS_REASON_CODE                           as                           CLAIM_STATUS_REASON_CODE	, 
		 CLAIM_TYPE_CHNG_OVR_IND                            as                            CLAIM_TYPE_CHNG_OVR_IND	, 
		 ACCIDENT_DESCRIPTION_TEXT                          as                          ACCIDENT_DESCRIPTION_TEXT	, 
		 IW_JOB_TITLE                                       as                                       IW_JOB_TITLE	, 
		 ATTORNEY_OF_RECORD_CUSTOMER_NUMBER                 as                 ATTORNEY_OF_RECORD_CUSTOMER_NUMBER	, 
		 EMPLOYER_REPRESENTATIVE_CUSTOMER_NUMBER            as            EMPLOYER_REPRESENTATIVE_CUSTOMER_NUMBER	, 
		 INSURED_REPRESENTATIVE_CUSTOMER_NUMBER             as             INSURED_REPRESENTATIVE_CUSTOMER_NUMBER	, 
		 PROVIDER_PEACH_NUMBER                              as                              PROVIDER_PEACH_NUMBER
	 from SRC_CLM )

, LOGIC_IW as ( 
	SELECT 	  
		 INJURED_WORKER_HKEY                                as                                INJURED_WORKER_HKEY	, 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_IW )

, LOGIC_P_ICD as ( 
	SELECT 	  
		 ICD_HKEY                                           as                                           ICD_HKEY	, 
		 ICD_CODE                                           as                                           ICD_CODE	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_P_ICD )

, LOGIC_EMP as ( 
	SELECT 	  
		 EMPLOYER_HKEY                                      as                                      EMPLOYER_HKEY	, 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_EMP )

, LOGIC_INVEST as ( 
	SELECT 	  
		 CASE WHEN ACP_START_DATE is null then '-1' 
			WHEN ACP_START_DATE < '1901-01-01' then '-2' 
			WHEN ACP_START_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( ACP_START_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                     ACP_START_DATE	, 
		 CASE WHEN ACP_END_DATE is null then '-1' 
			WHEN ACP_END_DATE < '1901-01-01' then '-2' 
			WHEN ACP_END_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( ACP_END_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                                       ACP_END_DATE	, 
		  {{ dbt_utils.generate_surrogate_key ( [ 'CLAIM_ACP_STATUS_IND','ACP_MANUAL_INTERVENTION_IND','JURISDICTION_TYPE_CODE' ] ) }} 
                                                             as                                 INVESTIGATION_HKEY	, 
		 DAYS BETWEEN ACP_START_DATE AND ACP_END_DATE       as                       ACP_VALIDATION_LAG_DAY_COUNT	, 
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER
	 from SRC_INVEST )

, LOGIC_CSPC as ( 
	SELECT 	  
		 CASE WHEN FIRST_MEDICAL_PAYMENT_DATE is null then '-1' 
			WHEN FIRST_MEDICAL_PAYMENT_DATE < '1901-01-01' then '-2' 
			WHEN FIRST_MEDICAL_PAYMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( FIRST_MEDICAL_PAYMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                         FIRST_MEDICAL_PAYMENT_DATE	, 
		 CASE WHEN LAST_MEDICAL_PAYMENT_DATE is null then '-1' 
			WHEN LAST_MEDICAL_PAYMENT_DATE < '1901-01-01' then '-2' 
			WHEN LAST_MEDICAL_PAYMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( LAST_MEDICAL_PAYMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                          LAST_MEDICAL_PAYMENT_DATE	, 
		 CASE WHEN FIRST_INDEMNITY_PAYMENT_DATE is null then '-1' 
			WHEN FIRST_INDEMNITY_PAYMENT_DATE < '1901-01-01' then '-2' 
			WHEN FIRST_INDEMNITY_PAYMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( FIRST_INDEMNITY_PAYMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                       FIRST_INDEMNITY_PAYMENT_DATE	, 
		 CASE WHEN LAST_INDEMNITY_PAYMENT_DATE is null then '-1' 
			WHEN LAST_INDEMNITY_PAYMENT_DATE < '1901-01-01' then '-2' 
			WHEN LAST_INDEMNITY_PAYMENT_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( LAST_INDEMNITY_PAYMENT_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                        LAST_INDEMNITY_PAYMENT_DATE	, 
		 CASE WHEN PAYMENT_AMOUNTS_AS_OF_DATE is null then '-1' 
			WHEN PAYMENT_AMOUNTS_AS_OF_DATE < '1901-01-01' then '-2' 
			WHEN PAYMENT_AMOUNTS_AS_OF_DATE > '2099-12-31' then '-3' 
			ELSE regexp_replace( PAYMENT_AMOUNTS_AS_OF_DATE, '[^0-9]+', '') 
				END :: INTEGER                                         
                                                             as                         PAYMENT_AMOUNTS_AS_OF_DATE	, 
		 MEDICAL_HOSPITAL_AMOUNT                            as                            MEDICAL_HOSPITAL_AMOUNT	, 
		 MEDICAL_CLINIC_AMOUNT                              as                              MEDICAL_CLINIC_AMOUNT	, 
		 MEDICAL_DOCTOR_AMOUNT                              as                              MEDICAL_DOCTOR_AMOUNT	, 
		 MEDICAL_NURSING_SERVICES_AMOUNT                    as                    MEDICAL_NURSING_SERVICES_AMOUNT	, 
		 MEDICAL_DRUGS_PHARMACY_AMOUNT                      as                      MEDICAL_DRUGS_PHARMACY_AMOUNT	, 
		 MEDICAL_XRAY_RADIOLOGY_AMOUNT                      as                      MEDICAL_XRAY_RADIOLOGY_AMOUNT	, 
		 MEDICAL_LAB_PATHOLOGY_AMOUNT                       as                       MEDICAL_LAB_PATHOLOGY_AMOUNT	, 
		 (MEDICAL_MISC_AMOUNT + MEDICAL_OTHER_AMOUNT )      as                                MEDICAL_MISC_AMOUNT	, 
		 TOTAL_MEDICAL_PAID_AMOUNT                          as                          TOTAL_MEDICAL_PAID_AMOUNT	, 
		 INDEMNITY_DWRF_AMOUNT                              as                              INDEMNITY_DWRF_AMOUNT	, 
		 INDEMNITY_FACIAL_DISFIGUREMENT_AMOUNT              as              INDEMNITY_FACIAL_DISFIGUREMENT_AMOUNT	, 
		 INDEMNITY_LUMP_SUM_SETTLEMENT_AMOUNT               as               INDEMNITY_LUMP_SUM_SETTLEMENT_AMOUNT	, 
		 INDEMNITY_LUMP_SUM_ADVANCE_AMOUNT                  as                  INDEMNITY_LUMP_SUM_ADVANCE_AMOUNT	, 
		 INDEMNITY_LUMPSUM_ADVANCE_ATTY_FEES_AMOUNT         as         INDEMNITY_LUMPSUM_ADVANCE_ATTY_FEES_AMOUNT	, 
		 INDEMNITY_PTD_AMOUNT                               as                               INDEMNITY_PTD_AMOUNT	, 
		 INDEMNITY_TEMPORARY_TOTAL_AMOUNT                   as                   INDEMNITY_TEMPORARY_TOTAL_AMOUNT	, 
		 INDEMNITY_TEMPORARY_PARTIAL_AMOUNT                 as                 INDEMNITY_TEMPORARY_PARTIAL_AMOUNT	, 
		 INDEMNITY_PCT_PERMANENT_PARTIAL_AMOUNT             as             INDEMNITY_PCT_PERMANENT_PARTIAL_AMOUNT	, 
		 INDEMNITY_DEATH_BENEFIT_AMOUNT                     as                     INDEMNITY_DEATH_BENEFIT_AMOUNT	, 
		 INDEMNITY_LIVING_MAINTENANCE_REHAB_AMOUNT          as          INDEMNITY_LIVING_MAINTENANCE_REHAB_AMOUNT	, 
		 INDEMNITY_LIVING_MAINTENANCE_WAGE_LOSS_AMOUNT      as      INDEMNITY_LIVING_MAINTENANCE_WAGE_LOSS_AMOUNT	, 
		 INDEMNITY_OTHER_INDEMNITY_AMOUNT                   as                   INDEMNITY_OTHER_INDEMNITY_AMOUNT	, 
		 TOTAL_INDEMNITY_PAID_AMOUNT                        as                        TOTAL_INDEMNITY_PAID_AMOUNT	, 
		 TOTAL_FUNERAL_COSTS_AMOUNT                         as                         TOTAL_FUNERAL_COSTS_AMOUNT	, 
		 TOTAL_COURT_COSTS_AMOUNT                           as                           TOTAL_COURT_COSTS_AMOUNT	, 
		 TOTAL_CLAIM_PAYMENT_AMOUNT                         as                         TOTAL_CLAIM_PAYMENT_AMOUNT	, 
		 INDEMNITY_WORKING_WAGE_LOSS_AMOUNT                 as                 INDEMNITY_WORKING_WAGE_LOSS_AMOUNT	, 
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER
	 from SRC_CSPC )

, LOGIC_MC as ( 
	SELECT 	  
		 MANUAL_CLASS_HKEY                                  as                                  MANUAL_CLASS_HKEY	, 
		 CURRENT_RECORD_IND                                 as                                 CURRENT_RECORD_IND	, 
		 MANUAL_CLASS_CODE                                  as                                  MANUAL_CLASS_CODE
	 from SRC_MC )

, LOGIC_INV as ( 
	SELECT 	  
		 CREATE SMARTKEY FROM THE DATE.

DATA EXTRACTION RULE: PICK THE MIN OF DATE_OF_SERVICE_FROM FOR A CLAIM
                                                             as                     FIRST_MEDICAL_SERVICE_DATE_KEY	, 
		 CREATE SMARTKEY FROM THE DATE.

DATA EXTRACTION RULE: PICK THE MAX OF DATE_OF_SERVICE_TO FOR A CLAIM
                                                             as                      LAST_MEDICAL_SERVICE_DATE_KEY	, 
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER
	 from SRC_INV )

, LOGIC_NTWK as ( 
	SELECT 	  
		 NETWORK_HKEY                                       as                                       NETWORK_HKEY	, 
		 NETWORK_NUMBER                                     as                                     NETWORK_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_NTWK )

, LOGIC_DM as ( 
	SELECT 	  
		 CASE WHEN  nullif(array_to_string(array_construct_compact( DISABILITY_TYPE_CODE, DISABILITY_REASON_TYPE_CODE, DISABILITY_MEDICAL_STATUS_TYPE_CODE, DISABILITY_WORK_STATUS_TYPE_CODE, CURRENT_DISABILITY_STATUS_INDCREATEAHKEYBASEDONTHECURRENTROWVALUES(I.E.CURRENT_DISABILITY_STATUS_IND='Y').IFMORETHANONERECORDFORTHEABOVETHENPICKTHEMAX(DISABILITY_START_DATE) ),''),'') is NULL 
			then MD5( '99999' ) ELSE {{ dbt_utils.generate_surrogate_key ( [ 'DISABILITY_TYPE_CODE','DISABILITY_REASON_TYPE_CODE','DISABILITY_MEDICAL_STATUS_TYPE_CODE','DISABILITY_WORK_STATUS_TYPE_CODE','CURRENT_DISABILITY_STATUS_INDCREATEAHKEYBASEDONTHECURRENTROWVALUES(I.E.CURRENT_DISABILITY_STATUS_IND='Y').IFMORETHANONERECORDFORTHEABOVETHENPICKTHEMAX(DISABILITY_START_DATE)' ] ) }} 
				END                                         
                                                             as                               DISABILITY_TYPE_HKEY	, 
		 DATA EXTRACTION RULE: PICK THE LATEST ROW FOR A CLAIM. I.E.CURRENT_DISABILITY_STATUS_IND DESC,DISABILITY_START_DATE DESC,DISABILITY_MANAGEMENT_ID DESC)

RULE: SUM(DISABILITY_ACTUAL_ELAPSED_DAY_COUNT) FOR A CLAIM
                                                             as                   TOTAL_PROJECTED_MISSED_DAY_COUNT	, 
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER	, 
		 DISABILITY_ACTUAL_ELAPSED_DAY_COUNT                as                DISABILITY_ACTUAL_ELAPSED_DAY_COUNT
	 from SRC_DM )

, LOGIC_IPS as ( 
	SELECT 	  
		 PERMANENT_PARTIAL_PERCENT                          as                          PERMANENT_PARTIAL_PERCENT	, 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as                  INDEMNITY_BENEFIT_PLAN_WEEK_COUNT	, 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as                  INDEMNITY_BENEFIT_PLAN_WEEK_COUNT	, 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as                  INDEMNITY_BENEFIT_PLAN_WEEK_COUNT	, 
		 SAME DATA EXTRACTION RULE AS ABOVE.
IF BENEFIT_REPORTING_TYPE_DESC IN ('GRTW - CLAIMANT', 'GRTW - RTW EMPLOYER')  THEN SUM(INDEMNITY_SCHEDULED_TOTAL_AMOUNT)
                                                             as                                 GRADUAL_RTW_AMOUNT	, 
		 SAME DATA EXTRACTION RULE AS ABOVE.
IF BENEFIT_TYPE_DESC IN ('WAGE AGREEMENT-AWW', 'WAGE AGREEMENT-FWW')  THEN SUM(INDEMNITY_SCHEDULED_TOTAL_AMOUNT)
                                                             as                              WAGE_AGREEMENT_AMOUNT	, 
		 SAME DATA EXTRACTION RULE AS ABOVE.
IF BENEFIT_TYPE_DESC IN ('SALARY CONTIN-AWW', 'SALARY CONTIN-FWW')  THEN SUM(INDEMNITY_BENEFIT_PLAN_DAY_COUNT)
                                                             as                      SALARY_CONTINUATION_DAY_COUNT	, 
		 BENEFIT_TYPE_DESC                                  as                                  BENEFIT_TYPE_DESC	, 
		 IP_VOID_IND                                        as                                        IP_VOID_IND	, 
		 ISS_VOID_IND                                       as                                       ISS_VOID_IND	, 
		 ISD_VOID_IND                                       as                                       ISD_VOID_IND	, 
		 ISDA_VOID_IND                                      as                                      ISDA_VOID_IND	, 
		 AGRE_ID                                            as                                            AGRE_ID	, 
		 INDEMNITY_PLAN_ID                                  as                                  INDEMNITY_PLAN_ID	, 
		 BENEFIT_REPORTING_TYPE_DESC                        as                        BENEFIT_REPORTING_TYPE_DESC	, 
		 INDEMNITY_BENEFIT_PLAN_DAY_COUNT                   as                   INDEMNITY_BENEFIT_PLAN_DAY_COUNT
	 from SRC_IPS )

, LOGIC_PRVDR as ( 
	SELECT 	  
		 PROVIDER_HKEY                                      as                                      PROVIDER_HKEY	, 
		 PROVIDER_PEACH_NUMBER                              as                              PROVIDER_PEACH_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_PRVDR )

, LOGIC_ATTY as ( 
	SELECT 	  
		 REPRESENTATIVE_HKEY                                as                                REPRESENTATIVE_HKEY	, 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_ATTY )

, LOGIC_REP as ( 
	SELECT 	  
		 REPRESENTATIVE_HKEY                                as                                REPRESENTATIVE_HKEY	, 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_REP )

, LOGIC_INSRD as ( 
	SELECT 	  
		 REPRESENTATIVE_HKEY                                as                                REPRESENTATIVE_HKEY	, 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER	, 
		 RECORD_EFFECTIVE_DATE                              as                              RECORD_EFFECTIVE_DATE	, 
		 RECORD_END_DATE                                    as                                    RECORD_END_DATE
	 from SRC_INSRD )


---- RENAME LAYER ----


, RENAME_CLM as ( SELECT  
		 CLAIM_NUMBER                                       as                                       CLAIM_NUMBER , 
		 CLAIM_INITIAL_FILE_DATE                            as                              INITIAL_FILE_DATE_KEY , 
		 CLAIM_FILE_DATE                                    as                                      FILE_DATE_KEY , 
		 CLM_OCCR_DATE                                      as                                OCCURRENCE_DATE_KEY , 
		 MANUAL_CLASS_INDUSTRY_GROUP_HKEY                   as                   MANUAL_CLASS_INDUSTRY_GROUP_HKEY , 
		 ENTRY_USER_HKEY                                    as                                    ENTRY_USER_HKEY , 
		 SOURCE_SYTEM_CREATE_DATE_KEY                       as                       SOURCE_SYTEM_CREATE_DATE_KEY , 
		 CLAIM_RELEASE_DATE                                 as                             CLAIM_RELEASE_DATE_KEY , 
		 CLM_FIRST_DECISION_DATE                            as                       FIRST_DETERMINATION_DATE_KEY , 
		 PRIMARY_CSS_HKEY                                   as                                   PRIMARY_CSS_HKEY , 
		 DETERMINATION_USER_LGN_NM                          as                            DETERMINATION_USER_HKEY , 
		 ORG_UNT_NM                                         as                           ORGANIZATIONAL_UNIT_HKEY , 
		 FIRST_ASSIGNMENT_DATE                              as                          FIRST_ASSIGNMENT_DATE_KEY , 
		 LAST_ASSIGNMENT_DATE                               as                           LAST_ASSIGNMENT_DATE_KEY , 
		 FIRST_POR_VISIT_DATE                               as                           FIRST_POR_VISIT_DATE_KEY , 
		 POLICY_STANDING_HKEY                               as                               POLICY_STANDING_HKEY , 
		 LAST_DAY_AT_WORK_DATE                              as                          LAST_DAY_AT_WORK_DATE_KEY , 
		 ESTIMATED_RETURN_TO_WORK_DATE                      as                  ESTIMATED_RETURN_TO_WORK_DATE_KEY , 
		 ACTUAL_RETURN_TO_WORK_DATE                         as                     ACTUAL_RETURN_TO_WORK_DATE_KEY , 
		 CLAIM_TYPE_STATUS_HKEY                             as                             CLAIM_TYPE_STATUS_HKEY , 
		 CLAIM_DETAIL_HKEY                                  as                                  CLAIM_DETAIL_HKEY , 
		 CLAIM_ACCIDENT_DESC_HKEY                           as                           CLAIM_ACCIDENT_DESC_HKEY , 
		 EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE               as           EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE_KEY , 
		 EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE              as          EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE_KEY , 
		 EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE         as     EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE_KEY , 
		 INJURY_TYPE_HKEY                                   as                                   INJURY_TYPE_HKEY , 
		 CATASTROPHIC_EFFECTIVE_DATE                        as                    CATASTROPHIC_EFFECTIVE_DATE_KEY , 
		 CATASTROPHIC_EXPIRATION_DATE                       as                   CATASTROPHIC_EXPIRATION_DATE_KEY , 
		 POLICY_ORIGINAL_EFFECTIVE_DATE                     as                 POLICY_ORIGINAL_EFFECTIVE_DATE_KEY , 
		 CLAIM_COVID_PROFILE_HKEY                           as                           CLAIM_COVID_PROFILE_HKEY , 
		 SETTLE_MEDICAL_DATE                                as                            SETTLE_MEDICAL_DATE_KEY , 
		 SETTLE_INDEMNITY_DATE                              as                          SETTLE_INDEMNITY_DATE_KEY , 
		 SETTLE_BOTH_DATE                                   as                               SETTLE_BOTH_DATE_KEY , 
		 CLOSE_DATE                                         as                                     CLOSE_DATE_KEY , 
		 REOPEN_DATE                                        as                                    REOPEN_DATE_KEY , 
		 RECLOSE_DATE                                       as                                   RECLOSE_DATE_KEY , 
		 STATUE_OF_LIMITATION_DATE                          as                      STATUE_OF_LIMITATION_DATE_KEY , 
		 POLICY_NUMBER                                      as                                      POLICY_NUMBER , 
		 BUSINESS_SEQ_NUMBER                                as                           BUSINESS_SEQUENCE_NUMBER , 
		 IW_AGE_AT_OCCURRENCE                               as                                  AGE_AT_OCCURRENCE , 
		 CLAIM_FILE_LAG_DAYS_COUNT                          as                                 FILE_LAG_DAY_COUNT , 
		 FROI_TO_FIRST_DATE_OF_DETERMINATION_LAG_DAY_COUNT  as  FROI_TO_FIRST_DATE_OF_DETERMINATION_LAG_DAY_COUNT , 
		 FROI_TO_CLOSED_LAG_DAY_COUNT                       as                       FROI_TO_CLOSED_LAG_DAY_COUNT , 
		 TOTAL_ELAPSED_MISSED_DAY_COUNT                     as                     TOTAL_ELAPSED_MISSED_DAY_COUNT , 
		 TOTAL_ELIGIBLE_MISSED_DAY_COUNT                    as                    TOTAL_ELIGIBLE_MISSED_DAY_COUNT , 
		 INVOICE_DISTINCT_COUNT                             as                             INVOICE_DISTINCT_COUNT , 
		 INVOICE_LINE_DISTINCT_COUNT                        as                        INVOICE_LINE_DISTINCT_COUNT , 
		 TOTAL_SCH_LOSS_PAID_AMT                            as                     INDEMNITY_SCHEDULE_LOSS_AMOUNT , 
		 TOTAL_NWWL_PAID_AMT                                as             INDEMNITY_NON_WORKING_WAGE_LOSS_AMOUNT , 
		 CLAIM_FILE_DATE                                    as                                    CLAIM_FILE_DATE , 
		 IW_CUSTOMER_NUMBER                                 as                                 IW_CUSTOMER_NUMBER , 
		 PRIMARY_ICD_CODE                                   as                                   PRIMARY_ICD_CODE , 
		 EMP_CUSTOMER_NUMBER                                as                                EMP_CUSTOMER_NUMBER , 
		 MANUAL_CLASS_CODE                                  as                              CLM_MANUAL_CLASS_CODE , 
		 DRVD_MANUAL_CLASS_SUFFIX_CODE                      as                      DRVD_MANUAL_CLASS_SUFFIX_CODE , 
		 DETERMINATION_USER_LGN_NM                          as                          DETERMINATION_USER_LGN_NM , 
		 ORG_UNT_NM                                         as                                         ORG_UNT_NM , 
		 INTL_STLD_INDM_DATE                                as                                INTL_STLD_INDM_DATE , 
		 INTL_STLD_MDCL_DATE                                as                                INTL_STLD_MDCL_DATE , 
		 CLM_CLMT_NTF_DT                                    as                                    CLM_CLMT_NTF_DT , 
		 CLM_EMPLR_NTF_DT                                   as                                   CLM_EMPLR_NTF_DT , 
		 K_PROGRAM_ENROLLMENT_DESC                          as                          K_PROGRAM_ENROLLMENT_DESC , 
		 K_PROGRAM_TYPE_DESC                                as                                K_PROGRAM_TYPE_DESC , 
		 K_PROGRAM_REASON_CODE                              as                              K_PROGRAM_REASON_CODE , 
		 FILING_SOURCE_DESC                                 as                                 FILING_SOURCE_DESC , 
		 FILING_MEDIA_DESC                                  as                                  FILING_MEDIA_DESC , 
		 NATURE_OF_INJURY_CATEGORY                          as                          NATURE_OF_INJURY_CATEGORY , 
		 NATURE_OF_INJURY_TYPE                              as                              NATURE_OF_INJURY_TYPE , 
		 FIREFIGHTER_CANCER_IND                             as                             FIREFIGHTER_CANCER_IND , 
		 COVID_EXPOSURE_IND                                 as                                 COVID_EXPOSURE_IND , 
		 COVID_EMERGENCY_WORKER_IND                         as                         COVID_EMERGENCY_WORKER_IND , 
		 COVID_HEALTH_CARE_WORKER_IND                       as                       COVID_HEALTH_CARE_WORKER_IND , 
		 COMBINED_IND                                       as                                       COMBINED_IND , 
		 SB223_IND                                          as                                          SB223_IND , 
		 EMPLOYER_PREMISES_IND                              as                              EMPLOYER_PREMISES_IND , 
		 CATASTROPHIC_IND                                   as                                   CATASTROPHIC_IND , 
		 CURRENT_CORESUITE_CLAIM_TYPE_CODE                  as                  CURRENT_CORESUITE_CLAIM_TYPE_CODE , 
		 CLAIM_STATE_CODE                                   as                                   CLAIM_STATE_CODE , 
		 CLAIM_STATUS_CODE                                  as                                  CLAIM_STATUS_CODE , 
		 CLAIM_STATUS_REASON_CODE                           as                           CLAIM_STATUS_REASON_CODE , 
		 CLAIM_TYPE_CHNG_OVR_IND                            as                            CLAIM_TYPE_CHNG_OVR_IND , 
		 ACCIDENT_DESCRIPTION_TEXT                          as                          ACCIDENT_DESCRIPTION_TEXT , 
		 IW_JOB_TITLE                                       as                                       IW_JOB_TITLE , 
		 ATTORNEY_OF_RECORD_CUSTOMER_NUMBER                 as                 ATTORNEY_OF_RECORD_CUSTOMER_NUMBER , 
		 EMPLOYER_REPRESENTATIVE_CUSTOMER_NUMBER            as            EMPLOYER_REPRESENTATIVE_CUSTOMER_NUMBER , 
		 INSURED_REPRESENTATIVE_CUSTOMER_NUMBER             as             INSURED_REPRESENTATIVE_CUSTOMER_NUMBER , 
		 PROVIDER_PEACH_NUMBER                              as                              PROVIDER_PEACH_NUMBER 
		FROM LOGIC_CLM
            )

, RENAME_IW as ( SELECT  
		 INJURED_WORKER_HKEY                                as                                INJURED_WORKER_HKEY , 
		 CUSTOMER_NUMBER                                    as                       IW_CORESUITE_CUSTOMER_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                           IW_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                                 IW_RECORD_END_DATE 
		FROM LOGIC_IW
            )

, RENAME_P_ICD as ( SELECT  
		 ICD_HKEY                                           as                                   PRIMARY_ICD_HKEY , 
		 ICD_CODE                                           as                                     P_ICD_ICD_CODE , 
		 RECORD_EFFECTIVE_DATE                              as                        P_ICD_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                              P_ICD_RECORD_END_DATE 
		FROM LOGIC_P_ICD
            )

, RENAME_EMP as ( SELECT  
		 EMPLOYER_HKEY                                      as                                      EMPLOYER_HKEY , 
		 CUSTOMER_NUMBER                                    as                                    CUSTOMER_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                          EMP_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                                EMP_RECORD_END_DATE 
		FROM LOGIC_EMP
            )

, RENAME_MC as ( SELECT  
		 MANUAL_CLASS_HKEY                                  as                             MANUAL_CLASS_CODE_HKEY , 
		 CURRENT_RECORD_IND                                 as                                 CURRENT_RECORD_IND , 
		 MANUAL_CLASS_CODE                                  as                                  MANUAL_CLASS_CODE 
		FROM LOGIC_MC
            )

, RENAME_INVEST as ( SELECT  
		 ACP_START_DATE                                     as                                 ACP_START_DATE_KEY , 
		 ACP_END_DATE                                       as                                   ACP_END_DATE_KEY , 
		 INVESTIGATION_HKEY                                 as                                 INVESTIGATION_HKEY , 
		 ACP_VALIDATION_LAG_DAY_COUNT                       as                       ACP_VALIDATION_LAG_DAY_COUNT , 
		 CLAIM_NUMBER                                       as                                INVEST_CLAIM_NUMBER 
		FROM LOGIC_INVEST
            )

, RENAME_CSPC as ( SELECT  
		 FIRST_MEDICAL_PAYMENT_DATE                         as                     FIRST_MEDICAL_PAYMENT_DATE_KEY , 
		 LAST_MEDICAL_PAYMENT_DATE                          as                      LAST_MEDICAL_PAYMENT_DATE_KEY , 
		 FIRST_INDEMNITY_PAYMENT_DATE                       as                   FIRST_INDEMNITY_PAYMENT_DATE_KEY , 
		 LAST_INDEMNITY_PAYMENT_DATE                        as                    LAST_INDEMNITY_PAYMENT_DATE_KEY , 
		 PAYMENT_AMOUNTS_AS_OF_DATE                         as                     PAYMENT_AMOUNTS_AS_OF_DATE_KEY , 
		 MEDICAL_HOSPITAL_AMOUNT                            as                            MEDICAL_HOSPITAL_AMOUNT , 
		 MEDICAL_CLINIC_AMOUNT                              as                              MEDICAL_CLINIC_AMOUNT , 
		 MEDICAL_DOCTOR_AMOUNT                              as                              MEDICAL_DOCTOR_AMOUNT , 
		 MEDICAL_NURSING_SERVICES_AMOUNT                    as                    MEDICAL_NURSING_SERVICES_AMOUNT , 
		 MEDICAL_DRUGS_PHARMACY_AMOUNT                      as                      MEDICAL_DRUGS_PHARMACY_AMOUNT , 
		 MEDICAL_XRAY_RADIOLOGY_AMOUNT                      as                      MEDICAL_XRAY_RADIOLOGY_AMOUNT , 
		 MEDICAL_LAB_PATHOLOGY_AMOUNT                       as                       MEDICAL_LAB_PATHOLOGY_AMOUNT , 
		 MEDICAL_MISC_AMOUNT                                as                                MEDICAL_MISC_AMOUNT , 
		 TOTAL_MEDICAL_PAID_AMOUNT                          as                          TOTAL_MEDICAL_PAID_AMOUNT , 
		 INDEMNITY_DWRF_AMOUNT                              as                              INDEMNITY_DWRF_AMOUNT , 
		 INDEMNITY_FACIAL_DISFIGUREMENT_AMOUNT              as              INDEMNITY_FACIAL_DISFIGUREMENT_AMOUNT , 
		 INDEMNITY_LUMP_SUM_SETTLEMENT_AMOUNT               as               INDEMNITY_LUMP_SUM_SETTLEMENT_AMOUNT , 
		 INDEMNITY_LUMP_SUM_ADVANCE_AMOUNT                  as                  INDEMNITY_LUMP_SUM_ADVANCE_AMOUNT , 
		 INDEMNITY_LUMPSUM_ADVANCE_ATTY_FEES_AMOUNT         as    INDEMNITY_LUMP_SUM_ADVANCE_ATTORNEY_FEES_AMOUNT , 
		 INDEMNITY_PTD_AMOUNT                               as                               INDEMNITY_PTD_AMOUNT , 
		 INDEMNITY_TEMPORARY_TOTAL_AMOUNT                   as                   INDEMNITY_TEMPORARY_TOTAL_AMOUNT , 
		 INDEMNITY_TEMPORARY_PARTIAL_AMOUNT                 as                 INDEMNITY_TEMPORARY_PARTIAL_AMOUNT , 
		 INDEMNITY_PCT_PERMANENT_PARTIAL_AMOUNT             as             INDEMNITY_PCT_PERMANENT_PARTIAL_AMOUNT , 
		 INDEMNITY_DEATH_BENEFIT_AMOUNT                     as                     INDEMNITY_DEATH_BENEFIT_AMOUNT , 
		 INDEMNITY_LIVING_MAINTENANCE_REHAB_AMOUNT          as          INDEMNITY_LIVING_MAINTENANCE_REHAB_AMOUNT , 
		 INDEMNITY_LIVING_MAINTENANCE_WAGE_LOSS_AMOUNT      as      INDEMNITY_LIVING_MAINTENANCE_WAGE_LOSS_AMOUNT , 
		 INDEMNITY_OTHER_INDEMNITY_AMOUNT                   as                   INDEMNITY_OTHER_INDEMNITY_AMOUNT , 
		 TOTAL_INDEMNITY_PAID_AMOUNT                        as                        TOTAL_INDEMNITY_PAID_AMOUNT , 
		 TOTAL_FUNERAL_COSTS_AMOUNT                         as                         TOTAL_FUNERAL_COSTS_AMOUNT , 
		 TOTAL_COURT_COSTS_AMOUNT                           as                           TOTAL_COURT_COSTS_AMOUNT , 
		 TOTAL_CLAIM_PAYMENT_AMOUNT                         as                         TOTAL_CLAIM_PAYMENT_AMOUNT , 
		 INDEMNITY_WORKING_WAGE_LOSS_AMOUNT                 as                 INDEMNITY_WORKING_WAGE_LOSS_AMOUNT , 
		 CLAIM_NUMBER                                       as                                  CSPC_CLAIM_NUMBER 
		FROM LOGIC_CSPC
            )

, RENAME_PRVDR as ( SELECT  
		 PROVIDER_HKEY                                      as                            PROVIDER_OF_RECORD_HKEY , 
		 PROVIDER_PEACH_NUMBER                              as                        PRVDR_PROVIDER_PEACH_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                        PRVDR_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                              PRVDR_RECORD_END_DATE 
		FROM LOGIC_PRVDR
            )

, RENAME_INV as ( SELECT  
		 FIRST_MEDICAL_SERVICE_DATE_KEY                     as                     FIRST_MEDICAL_SERVICE_DATE_KEY , 
		 LAST_MEDICAL_SERVICE_DATE_KEY                      as                      LAST_MEDICAL_SERVICE_DATE_KEY , 
		 CLAIM_NUMBER                                       as                                   INV_CLAIM_NUMBER 
		FROM LOGIC_INV
            )

, RENAME_NTWK as ( SELECT  
		 NETWORK_HKEY                                       as                                  MCO_ASSIGNED_HKEY , 
		 NETWORK_NUMBER                                     as                                NTWK_NETWORK_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                         NTWK_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                               NTWK_RECORD_END_DATE 
		FROM LOGIC_NTWK
            )

, RENAME_DM as ( SELECT  
		 DISABILITY_TYPE_HKEY                               as                               DISABILITY_TYPE_HKEY , 
		 TOTAL_PROJECTED_MISSED_DAY_COUNT                   as                   TOTAL_PROJECTED_MISSED_DAY_COUNT , 
		 CLAIM_NUMBER                                       as                                    DM_CLAIM_NUMBER , 
		 DISABILITY_ACTUAL_ELAPSED_DAY_COUNT                as                DISABILITY_ACTUAL_ELAPSED_DAY_COUNT 
		FROM LOGIC_DM
            )

, RENAME_ATTY as ( SELECT  
		 REPRESENTATIVE_HKEY                                as                            ATTORNEY_OF_RECORD_HKEY , 
		 CUSTOMER_NUMBER                                    as                               ATTY_CUSTOMER_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                         ATTY_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                               ATTY_RECORD_END_DATE 
		FROM LOGIC_ATTY
            )

, RENAME_REP as ( SELECT  
		 REPRESENTATIVE_HKEY                                as                       EMPLOYER_REPRESENTATIVE_HKEY , 
		 CUSTOMER_NUMBER                                    as                                REP_CUSTOMER_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                          REP_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                                REP_RECORD_END_DATE 
		FROM LOGIC_REP
            )

, RENAME_INSRD as ( SELECT  
		 REPRESENTATIVE_HKEY                                as                        INSURED_REPRESENTATIVE_HKEY , 
		 CUSTOMER_NUMBER                                    as                              INSRD_CUSTOMER_NUMBER , 
		 RECORD_EFFECTIVE_DATE                              as                        INSRD_RECORD_EFFECTIVE_DATE , 
		 RECORD_END_DATE                                    as                              INSRD_RECORD_END_DATE 
		FROM LOGIC_INSRD
            )

, RENAME_IPS as ( SELECT  
		 PERMANENT_PARTIAL_PERCENT                          as           CLAIM_TOTAL_PERMANENT_PARTIAL_PERCENTAGE , 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as            CLAIM_TOTAL_NON_WORKING_WAGE_LOSS_WEEKS , 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as                CLAIM_TOTAL_WORKING_WAGE_LOSS_WEEKS , 
		 INDEMNITY_BENEFIT_PLAN_WEEK_COUNT                  as     CLAIM_TOTAL_LIVING_MAINTENANCE_WAGE_LOSS_WEEKS , 
		 GRADUAL_RTW_AMOUNT                                 as                                 GRADUAL_RTW_AMOUNT , 
		 WAGE_AGREEMENT_AMOUNT                              as                              WAGE_AGREEMENT_AMOUNT , 
		 SALARY_CONTINUATION_DAY_COUNT                      as                      SALARY_CONTINUATION_DAY_COUNT , 
		 BENEFIT_TYPE_DESC                                  as                                  BENEFIT_TYPE_DESC , 
		 IP_VOID_IND                                        as                                        IP_VOID_IND , 
		 ISS_VOID_IND                                       as                                       ISS_VOID_IND , 
		 ISD_VOID_IND                                       as                                       ISD_VOID_IND , 
		 ISDA_VOID_IND                                      as                                      ISDA_VOID_IND , 
		 AGRE_ID                                            as                                        IPS_AGRE_ID , 
		 INDEMNITY_PLAN_ID                                  as                                  INDEMNITY_PLAN_ID , 
		 BENEFIT_REPORTING_TYPE_DESC                        as                        BENEFIT_REPORTING_TYPE_DESC , 
		 INDEMNITY_BENEFIT_PLAN_DAY_COUNT                   as                   INDEMNITY_BENEFIT_PLAN_DAY_COUNT 
		FROM LOGIC_IPS
            )

---- FILTER LAYER ----

FILTER_CLM                            as ( SELECT * FROM    RENAME_CLM    ),
FILTER_IW                             as ( SELECT * FROM    RENAME_IW    ),
FILTER_P_ICD                          as ( SELECT * FROM    RENAME_P_ICD    ),
FILTER_EMP                            as ( SELECT * FROM    RENAME_EMP    ),
FILTER_INVEST                         as ( SELECT * FROM    RENAME_INVEST    ),
FILTER_CSPC                           as ( SELECT * FROM    RENAME_CSPC    ),
FILTER_MC                             as ( SELECT * FROM    RENAME_MC 
                                            WHERE CURRENT_RECORD_IND = 'Y'   ),
FILTER_INV                            as ( SELECT * FROM    RENAME_INV    ),
FILTER_NTWK                           as ( SELECT * FROM    RENAME_NTWK    ),
FILTER_DM                             as ( SELECT * FROM    RENAME_DM    ),
FILTER_IPS                            as ( SELECT * FROM    RENAME_IPS 
                                            WHERE (BENEFIT_TYPE_DESC IN ( '%PP', 'NWWL','WWL','LMWL','WAGE AGREEMENT-AWW', 'WAGE AGREEMENT-FWW', 'SALARY CONTIN-AWW', 'SALARY CONTIN-FWW') 
       OR BENEFIT_REPORTING_TYPE_DESC IN ('GRTW - CLAIMANT', 'GRTW - RTW EMPLOYER'))
AND IP_VOID_IND = 'N'
AND NVL(ISS_VOID_IND, 'N') = 'N'
AND NVL(ISD_VOID_IND, 'N') = 'N'
AND NVL(ISDA_VOID_IND, 'N') = 'N'   ),
FILTER_PRVDR                          as ( SELECT * FROM    RENAME_PRVDR    ),
FILTER_ATTY                           as ( SELECT * FROM    RENAME_ATTY    ),
FILTER_REP                            as ( SELECT * FROM    RENAME_REP    ),
FILTER_INSRD                          as ( SELECT * FROM    RENAME_INSRD    )

---- JOIN LAYER ----

CLM as ( SELECT * 
				FROM  FILTER_CLM
				LEFT JOIN FILTER_INVEST ON  FILTER_CLM.CLAIM_NUMBER =  FILTER_INVEST.INVEST_CLAIM_NUMBER 
								LEFT JOIN FILTER_CSPC ON  FILTER_CLM.CLAIM_NUMBER =  FILTER_CSPC.CSPC_CLAIM_NUMBER 
								LEFT JOIN FILTER_INV ON  FILTER_CLM.CLAIM_NUMBER =  FILTER_INV.INV_CLAIM_NUMBER 
								LEFT JOIN FILTER_DM ON  FILTER_CLM.CLAIM_NUMBER =  FILTER_DM.DM_CLAIM_NUMBER 
								LEFT JOIN FILTER_IPS ON  FILTER_CLM.AGRE_ID =  FILTER_IPS.IPS_AGRE_ID 
						LEFT JOIN FILTER_PRVDR ON  coalesce( FILTER_CLM.PRVDR_PEACH_NUMBER '99999999999') =  FILTER_PRVDR.PRVDR_PROVIDER_PEACH_NUMBER AND CURRENT_DATE BETWEEN PRVDR_RECORD_EFFECTIVE_DATE AND coalesce( PRVDR_RECORD_END_DATE, '2099-12-31') 
						LEFT JOIN FILTER_IW ON  coalesce( FILTER_CLM.IW_CUSTOMER_NUMBER, '99999') =  FILTER_IW.IW_CORESUITE_CUSTOMER_NUMBER AND CURRENT_DATE BETWEEN IW_RECORD_EFFECTIVE_DATE AND coalesce( IW_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_P_ICD ON  coalesce( FILTER_CLM.PRIMARY_ICD_CODE,  'UNK') =  FILTER_P_ICD.P_ICD_ICD_CODE AND CURRENT_DATE  BETWEEN P_ICD_RECORD_EFFECTIVE_DATE AND coalesce( P_ICD_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_EMP ON  coalesce( FILTER_CLM.EMP_CUSTOMER_NUMBER, '99999') =  FILTER_EMP.CUSTOMER_NUMBER AND CURRENT_DATE  BETWEEN EMP_RECORD_EFFECTIVE_DATE AND coalesce( EMP_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_MC ON  coalesce( FILTER_CLM.CLM_MANUAL_CLASS_CODE, '99999') =  FILTER_MC.MANUAL_CLASS_CODE AND coalesce(CLM.DRVD_MANUAL_CLASS_SUFFIX_CODE, '99999') = MC.MANUAL_CLASS_SUFFIX_CODE 
								LEFT JOIN FILTER_NTWK ON  coalesce( FILTER_CLM.MCO_NO, '00000') =  FILTER_NTWK.NTWK_NETWORK_NUMBER AND CURRENT_DATE BETWEEN NTWK_RECORD_EFFECTIVE_DATE AND coalesce( NTWK_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_ATTY ON  coalesce( FILTER_CLM.ATTORNEY_OF_RECORD_CUSTOMER_NUMBER, '99999') =  FILTER_ATTY_CUSTOMER_NUMBER AND CURRENT_DATE  BETWEEN ATTY_RECORD_EFFECTIVE_DATE AND coalesce( ATTY_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_REP ON  coalesce( FILTER_CLM.EMPLOYER_REPRESENTATIVE_CUSTOMER_NUMBER, '99999') =  FILTER_REP.CUSTOMER_NUMBER AND CURRENT_DATE  BETWEEN REP_RECORD_EFFECTIVE_DATE AND coalesce( REP_RECORD_END_DATE, '2099-12-31') 
								LEFT JOIN FILTER_INSRD ON  coalesce( FILTER_CLM.INSURED_REPRESENTATIVE_CUSTOMER_NUMBER, '99999') =  FILTER_INSRD_CUSTOMER_NUMBER AND CURRENT_DATE  BETWEEN INSRD_RECORD_EFFECTIVE_DATE AND coalesce( INSRD_RECORD_END_DATE, '2099-12-31')  )
SELECT 
		  CLAIM_NUMBER
		, INITIAL_FILE_DATE_KEY
		, FILE_DATE_KEY
		, OCCURRENCE_DATE_KEY
		, INJURED_WORKER_HKEY
		, PRIMARY_ICD_HKEY
		, EMPLOYER_HKEY
		, MANUAL_CLASS_CODE_HKEY
		, MANUAL_CLASS_INDUSTRY_GROUP_HKEY
		, ENTRY_USER_HKEY
		, SOURCE_SYTEM_CREATE_DATE_KEY
		, CLAIM_RELEASE_DATE_KEY
		, FIRST_DETERMINATION_DATE_KEY
		, ACP_START_DATE_KEY
		, ACP_END_DATE_KEY
		, PRIMARY_CSS_HKEY
		, DETERMINATION_USER_HKEY
		, ORGANIZATIONAL_UNIT_HKEY
		, INVESTIGATION_HKEY
		, FIRST_ASSIGNMENT_DATE_KEY
		, LAST_ASSIGNMENT_DATE_KEY
		, FIRST_MEDICAL_PAYMENT_DATE_KEY
		, LAST_MEDICAL_PAYMENT_DATE_KEY
		, PROVIDER_OF_RECORD_HKEY
		, FIRST_POR_VISIT_DATE_KEY
		, FIRST_MEDICAL_SERVICE_DATE_KEY
		, LAST_MEDICAL_SERVICE_DATE_KEY
		, FIRST_INDEMNITY_PAYMENT_DATE_KEY
		, LAST_INDEMNITY_PAYMENT_DATE_KEY
		, PAYMENT_AMOUNTS_AS_OF_DATE_KEY
		, POLICY_STANDING_HKEY
		, MCO_ASSIGNED_HKEY
		, LAST_DAY_AT_WORK_DATE_KEY
		, DISABILITY_TYPE_HKEY
		, ESTIMATED_RETURN_TO_WORK_DATE_KEY
		, ACTUAL_RETURN_TO_WORK_DATE_KEY
		, CLAIM_TYPE_STATUS_HKEY
		, CLAIM_DETAIL_HKEY
		, CLAIM_ACCIDENT_DESC_HKEY
		, EMPLOYER_PAID_PROGRAM_EFFECTIVE_DATE_KEY
		, EMPLOYER_PAID_PROGRAM_EXPIRATION_DATE_KEY
		, EMPLOYER_PAID_PROGRAM_EFFECTIVE_ENTRY_DATE_KEY
		, INJURY_TYPE_HKEY
		, CATASTROPHIC_EFFECTIVE_DATE_KEY
		, CATASTROPHIC_EXPIRATION_DATE_KEY
		, POLICY_ORIGINAL_EFFECTIVE_DATE_KEY
		, ATTORNEY_OF_RECORD_HKEY
		, EMPLOYER_REPRESENTATIVE_HKEY
		, INSURED_REPRESENTATIVE_HKEY
		, CLAIM_COVID_PROFILE_HKEY
		, SETTLE_MEDICAL_DATE_KEY
		, SETTLE_INDEMNITY_DATE_KEY
		, SETTLE_BOTH_DATE_KEY
		, CLOSE_DATE_KEY
		, REOPEN_DATE_KEY
		, RECLOSE_DATE_KEY
		, STATUE_OF_LIMITATION_DATE_KEY
		, POLICY_NUMBER
		, BUSINESS_SEQUENCE_NUMBER
		, AGE_AT_OCCURRENCE
		, ACP_VALIDATION_LAG_DAY_COUNT
		, FILE_LAG_DAY_COUNT
		, FROI_TO_FIRST_DATE_OF_DETERMINATION_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND ACTUAL_RETURN_TO_WORK_DATE
                                                             as                         FROI_TO_ARTW_LAG_DAY_COUNT
		, FROI_TO_CLOSED_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND LEAST(INTL_STLD_INDM_DATE, INTL_STLD_MDCL_DATE)
                                                             as                   FROI_TO_SETTLEMENT_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND LEAST (FIRST_INDEMNITY_PAYMENT_DATE, FIRST_MEDICAL_PAYMENT_DATE)
                                                             as                FROI_TO_FIRST_PAYMENT_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND FIRST_INDEMNITY_PAYMENT_DATE
                                                             as              FROI_TO_FIRST_INDEMNITY_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND FIRST_MEDICAL_PAYMENT_DATE
                                                             as        FROI_TO_FIRST_MEDICAL_PAYMENT_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND CLM_CLMT_NTF_DT   as             FROI_TO_FIRST_IW_CONTACT_LAG_DAY_COUNT
		, 
		 DAYS BETWEEN CLAIM_FILE_DATE AND CLM_EMPLR_NTF_DT  as       FROI_TO_FIRST_EMPLOYER_CONTACT_LAG_DAY_COUNT
		, 
		 PRINT THE VALUE IN AUTOMATED LOGIC FOR NOW         as       FROI_TO_FIRST_PROVIDER_CONTACT_LAG_DAY_COUNT
		, 
		                                                    as                                                   
		, TOTAL_PROJECTED_MISSED_DAY_COUNT
		, TOTAL_ELAPSED_MISSED_DAY_COUNT
		, TOTAL_ELIGIBLE_MISSED_DAY_COUNT
		, 
		 (DERIVED)                                          as                                        CLAIM_COUNT
		, INVOICE_DISTINCT_COUNT
		, INVOICE_LINE_DISTINCT_COUNT
		, MEDICAL_HOSPITAL_AMOUNT
		, MEDICAL_CLINIC_AMOUNT
		, MEDICAL_DOCTOR_AMOUNT
		, MEDICAL_NURSING_SERVICES_AMOUNT
		, MEDICAL_DRUGS_PHARMACY_AMOUNT
		, MEDICAL_XRAY_RADIOLOGY_AMOUNT
		, MEDICAL_LAB_PATHOLOGY_AMOUNT
		, MEDICAL_MISC_AMOUNT
		, TOTAL_MEDICAL_PAID_AMOUNT
		, INDEMNITY_DWRF_AMOUNT
		, INDEMNITY_FACIAL_DISFIGUREMENT_AMOUNT
		, INDEMNITY_LUMP_SUM_SETTLEMENT_AMOUNT
		, INDEMNITY_LUMP_SUM_ADVANCE_AMOUNT
		, INDEMNITY_LUMP_SUM_ADVANCE_ATTORNEY_FEES_AMOUNT
		, INDEMNITY_PTD_AMOUNT
		, INDEMNITY_TEMPORARY_TOTAL_AMOUNT
		, INDEMNITY_TEMPORARY_PARTIAL_AMOUNT
		, INDEMNITY_SCHEDULE_LOSS_AMOUNT
		, INDEMNITY_PCT_PERMANENT_PARTIAL_AMOUNT
		, INDEMNITY_DEATH_BENEFIT_AMOUNT
		, INDEMNITY_LIVING_MAINTENANCE_REHAB_AMOUNT
		, INDEMNITY_LIVING_MAINTENANCE_WAGE_LOSS_AMOUNT
		, INDEMNITY_OTHER_INDEMNITY_AMOUNT
		, TOTAL_INDEMNITY_PAID_AMOUNT
		, TOTAL_FUNERAL_COSTS_AMOUNT
		, TOTAL_COURT_COSTS_AMOUNT
		, TOTAL_CLAIM_PAYMENT_AMOUNT
		, INDEMNITY_WORKING_WAGE_LOSS_AMOUNT
		, INDEMNITY_NON_WORKING_WAGE_LOSS_AMOUNT
		, CLAIM_TOTAL_PERMANENT_PARTIAL_PERCENTAGE
		, CLAIM_TOTAL_NON_WORKING_WAGE_LOSS_WEEKS
		, CLAIM_TOTAL_WORKING_WAGE_LOSS_WEEKS
		, CLAIM_TOTAL_LIVING_MAINTENANCE_WAGE_LOSS_WEEKS
		, GRADUAL_RTW_AMOUNT
		, WAGE_AGREEMENT_AMOUNT
		, SALARY_CONTINUATION_DAY_COUNT
		, 
		                                                    as                                                   
		, 
		                                                    as                                                   
		, 
		                                                    as                                                    
FROM CLM