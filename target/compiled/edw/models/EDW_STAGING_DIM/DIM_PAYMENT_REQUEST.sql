

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(PAY_MEDIA_PREFERENCE_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_MEDIA_PREFERENCE_TYPE_CODE, 
     last_value(PAY_REQUEST_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_TYPE_CODE, 
     last_value(PAY_REQUEST_STATE_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATE_TYPE_CODE, 
     last_value(PAY_REQUEST_STATUS_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATUS_TYPE_CODE, 
     last_value(PAY_REQUEST_STATUS_REASON_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATUS_REASON_TYPE_CODE, 
     last_value(PAY_MEDIA_PREFERENCE_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_MEDIA_PREFERENCE_TYPE_DESC, 
     last_value(PAY_REQUEST_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_TYPE_DESC, 
     last_value(PAY_REQUEST_STATE_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATE_TYPE_DESC, 
     last_value(PAY_REQUEST_STATUS_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATUS_TYPE_DESC, 
     last_value(PAY_REQUEST_STATUS_REASON_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PAY_REQUEST_STATUS_REASON_TYPE_DESC, 
     last_value(CONTEXT_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CONTEXT_TYPE_CODE, 
     last_value(SUB_CONTEXT_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as SUB_CONTEXT_TYPE_CODE, 
     last_value(SUB_CONTEXT_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as SUB_CONTEXT_TYPE_DESC
	FROM EDW_STAGING.DIM_PAYMENT_REQUEST_SCDALL_STEP2),

ETL AS( SELECT md5(cast(
    
    coalesce(cast(PAY_MEDIA_PREFERENCE_TYPE_CODE as 
    varchar
), '') || '-' || coalesce(cast(PAY_REQUEST_TYPE_CODE as 
    varchar
), '') || '-' || coalesce(cast(PAY_REQUEST_STATE_TYPE_CODE as 
    varchar
), '') || '-' || coalesce(cast(PAY_REQUEST_STATUS_TYPE_CODE as 
    varchar
), '') || '-' || coalesce(cast(PAY_REQUEST_STATUS_REASON_TYPE_CODE as 
    varchar
), '')

 as 
    varchar
)) AS PAYMENT_REQUEST_HKEY
,UNIQUE_ID_KEY
,PAY_MEDIA_PREFERENCE_TYPE_CODE
,PAY_REQUEST_TYPE_CODE
,PAY_REQUEST_STATE_TYPE_CODE
,PAY_REQUEST_STATUS_TYPE_CODE
,PAY_REQUEST_STATUS_REASON_TYPE_CODE
,PAY_MEDIA_PREFERENCE_TYPE_DESC
,PAY_REQUEST_TYPE_DESC
,PAY_REQUEST_STATE_TYPE_DESC
,PAY_REQUEST_STATUS_TYPE_DESC
,PAY_REQUEST_STATUS_REASON_TYPE_DESC
,CONTEXT_TYPE_CODE
,SUB_CONTEXT_TYPE_CODE
,SUB_CONTEXT_TYPE_DESC
,CURRENT_TIMESTAMP AS  LOAD_DATETIME
,TRY_TO_TIMESTAMP('Invalid') AS UPDATE_DATETIME
,'CORESUITE' AS PRIMARY_SOURCE_SYSTEM 
 from SCD
)

select * from ETL