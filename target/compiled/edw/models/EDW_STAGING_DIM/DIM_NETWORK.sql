 

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(NETWORK_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_NUMBER,
     last_value(NETWORK_FINANCIAL_STREET_ADDRESS_1) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_STREET_ADDRESS_1,
     last_value(NETWORK_FINANCIAL_STREET_ADDRESS_2) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_STREET_ADDRESS_2,
     last_value(NETWORK_FINANCIAL_ADDRESS_CITY_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_ADDRESS_CITY_NAME,
     last_value(NETWORK_FINANCIAL_ADDRESS_STATE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_ADDRESS_STATE_CODE,
     last_value(NETWORK_FINANCIAL_ADDRESS_ZIP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_ADDRESS_ZIP_CODE,
     last_value(NETWORK_FINANCIAL_ADDRESS_ZIP4_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_FINANCIAL_ADDRESS_ZIP4_CODE,
     last_value(NETWORK_MAILING_STREET_ADDRESS_1) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_STREET_ADDRESS_1,
     last_value(NETWORK_MAILING_STREET_ADDRESS_2) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_STREET_ADDRESS_2,
     last_value(NETWORK_MAILING_ADDRESS_CITY_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_ADDRESS_CITY_NAME,
     last_value(NETWORK_MAILING_ADDRESS_STATE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_ADDRESS_STATE_CODE,
     last_value(NETWORK_MAILING_ADDRESS_ZIP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_ADDRESS_ZIP_CODE,
     last_value(NETWORK_MAILING_ADDRESS_ZIP4_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_MAILING_ADDRESS_ZIP4_CODE,
     last_value(NETWORK_PHYSICAL_STREET_ADDRESS_1) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_STREET_ADDRESS_1,
     last_value(NETWORK_PHYSICAL_STREET_ADDRESS_2) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_STREET_ADDRESS_2,
     last_value(NETWORK_PHYSICAL_ADDRESS_CITY_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_ADDRESS_CITY_NAME,
     last_value(NETWORK_PHYSICAL_ADDRESS_STATE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_ADDRESS_STATE_CODE,
     last_value(NETWORK_PHYSICAL_ADDRESS_ZIP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_ADDRESS_ZIP_CODE,
     last_value(NETWORK_PHYSICAL_ADDRESS_ZIP4_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_PHYSICAL_ADDRESS_ZIP4_CODE,
     last_value(NETWORK_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_TYPE_DESC,
     last_value(NETWORK_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as NETWORK_TYPE_CODE,
     last_value(CORESUITE_CUSTOMER_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CORESUITE_CUSTOMER_NUMBER,
     last_value(MCO_CLOSE_BUSINESS_DATE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as MCO_CLOSE_BUSINESS_DATE,
     last_value(MCO_ACQUISITION_PATH) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as MCO_ACQUISITION_PATH,
     last_value(CURRENT_ACQUIRING_MCO_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CURRENT_ACQUIRING_MCO_NUMBER,
     last_value(CURRENT_ACQUIRING_MCO_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CURRENT_ACQUIRING_MCO_NAME,
 NETWORK_NAME,
 NETWORK_CERTIFICATION_EFFECTIVE_DATE,
  NETWORK_CERTIFICATION_END_DATE,
 NETWORK_CERTIFICATION_STATUS_CODE,
 NETWORK_CERTIFICATION_STATUS_DESC
,DBT_VALID_FROM AS EFFECTIVE_TIMESTAMP 
,DBT_VALID_TO   AS END_TIMESTAMP 
,
    COALESCE(CASE WHEN (ROW_NUMBER() OVER (PARTITION BY UNIQUE_ID_KEY ORDER BY DBT_VALID_FROM )) = 1 THEN NETWORK_CERTIFICATION_EFFECTIVE_DATE
    WHEN CAST(DBT_VALID_FROM AS DATE) = '1901-01-01' then CAST(DBT_VALID_FROM AS DATE)
      WHEN CAST(DBT_VALID_FROM AS DATE) <> '1901-01-01' THEN dateadd(day,1,CAST(DBT_VALID_FROM AS DATE))
    else CAST(DBT_VALID_FROM AS DATE) END,'1901-01-01'::DATE) as EFFECTIVE_DATE
,
    CAST(DBT_VALID_TO AS DATE) as END_DATE 

     FROM EDW_STAGING.DIM_NETWORK_SCDALL_STEP2)

, 
--- ETL LAYER ---
ETL AS ( SELECT 
md5(cast(
    
    coalesce(cast(NETWORK_NUMBER as 
    varchar
), '') || '-' || coalesce(cast(EFFECTIVE_DATE as 
    varchar
), '')

 as 
    varchar
)) as NETWORK_HKEY
,UNIQUE_ID_KEY
,NETWORK_NUMBER
,NETWORK_NAME
,NETWORK_FINANCIAL_STREET_ADDRESS_1
,NETWORK_FINANCIAL_STREET_ADDRESS_2
,NETWORK_FINANCIAL_ADDRESS_CITY_NAME
,NETWORK_FINANCIAL_ADDRESS_STATE_CODE
,NETWORK_FINANCIAL_ADDRESS_ZIP_CODE
,NETWORK_FINANCIAL_ADDRESS_ZIP4_CODE
,NETWORK_MAILING_STREET_ADDRESS_1
,NETWORK_MAILING_STREET_ADDRESS_2
,NETWORK_MAILING_ADDRESS_CITY_NAME
,NETWORK_MAILING_ADDRESS_STATE_CODE
,NETWORK_MAILING_ADDRESS_ZIP_CODE
,NETWORK_MAILING_ADDRESS_ZIP4_CODE
,NETWORK_PHYSICAL_STREET_ADDRESS_1
,NETWORK_PHYSICAL_STREET_ADDRESS_2
,NETWORK_PHYSICAL_ADDRESS_CITY_NAME
,NETWORK_PHYSICAL_ADDRESS_STATE_CODE
,NETWORK_PHYSICAL_ADDRESS_ZIP_CODE
,NETWORK_PHYSICAL_ADDRESS_ZIP4_CODE
,NETWORK_TYPE_DESC
,NETWORK_TYPE_CODE
,CORESUITE_CUSTOMER_NUMBER
,NETWORK_CERTIFICATION_STATUS_CODE
,NETWORK_CERTIFICATION_STATUS_DESC
,NETWORK_CERTIFICATION_EFFECTIVE_DATE
,NETWORK_CERTIFICATION_END_DATE
,MCO_CLOSE_BUSINESS_DATE
,MCO_ACQUISITION_PATH
,CURRENT_ACQUIRING_MCO_NUMBER
,CURRENT_ACQUIRING_MCO_NAME
,CASE WHEN END_DATE IS NULL THEN 'Y' ELSE 'N' END AS CURRENT_RECORD_IND
,EFFECTIVE_DATE AS RECORD_EFFECTIVE_DATE
,END_DATE AS RECORD_END_DATE
,EFFECTIVE_TIMESTAMP AS LOAD_DATETIME
,END_TIMESTAMP AS UPDATE_DATETIME
,'CAM' AS PRIMARY_SOURCE_SYSTEM
 FROM SCD)
select * from ETL