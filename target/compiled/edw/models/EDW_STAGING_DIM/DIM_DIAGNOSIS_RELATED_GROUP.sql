

 
 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(DIAGNOSIS_RELATED_GROUP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DIAGNOSIS_RELATED_GROUP_CODE, 
     last_value(PA_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PA_TYPE_DESC, 
     last_value(DRG_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DRG_TYPE_DESC, 
     last_value(REVIEW_IND) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as REVIEW_IND, 
 DIAGNOSIS_RELATED_GROUP_TITLE, 
 DRG_EFFECTIVE_DATE, 
 DRG_EXPIRATION_DATE
,DBT_VALID_FROM AS EFFECTIVE_TIMESTAMP 
,DBT_VALID_TO   AS END_TIMESTAMP 
,
    CASE WHEN (ROW_NUMBER() OVER (PARTITION BY UNIQUE_ID_KEY ORDER BY DBT_VALID_FROM )) = 1 THEN DRG_EFFECTIVE_DATE
    WHEN CAST(DBT_VALID_FROM AS DATE) = '1901-01-01' then CAST(DBT_VALID_FROM AS DATE)
      WHEN CAST(DBT_VALID_FROM AS DATE) <> '1901-01-01' THEN dateadd(day,1,CAST(DBT_VALID_FROM AS DATE))
    else CAST(DBT_VALID_FROM AS DATE) end as EFFECTIVE_DATE
,
    CAST(DBT_VALID_TO AS DATE) as END_DATE 
     
	FROM EDW_STAGING.DIM_DIAGNOSIS_RELATED_GROUP_SCDALL_STEP2)
, 
-------------- ETL LAYER ----------
ETL AS ( SELECT  md5(cast(
    
    coalesce(cast(DIAGNOSIS_RELATED_GROUP_CODE as 
    varchar
), '') || '-' || coalesce(cast(EFFECTIVE_DATE as 
    varchar
), '')

 as 
    varchar
)) AS DRG_HKEY
, UNIQUE_ID_KEY
, DIAGNOSIS_RELATED_GROUP_CODE
, PA_TYPE_DESC
, DRG_TYPE_DESC
, REVIEW_IND
, DIAGNOSIS_RELATED_GROUP_TITLE
, DRG_EFFECTIVE_DATE
, DRG_EXPIRATION_DATE
, case when END_DATE is null then 'Y' else 'N' end as CURRENT_RECORD_IND
, EFFECTIVE_DATE AS RECORD_EFFECTIVE_DATE
, END_DATE AS RECORD_END_DATE
, EFFECTIVE_TIMESTAMP AS LOAD_DATETIME
, END_TIMESTAMP AS UPDATE_DATETIME
,'CAM'::varchar(10000) AS PRIMARY_SOURCE_SYSTEM
   FROM SCD )

select * from ETL