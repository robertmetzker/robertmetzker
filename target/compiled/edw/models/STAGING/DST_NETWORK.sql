----SRC LAYER----
WITH
SRC_NTWK as ( SELECT *     from      STAGING.STG_NETWORK )
//SRC_NTWK as ( SELECT *     from      STG_NETWORK)
----LOGIC LAYER----
,
LOGIC_NTWK as ( SELECT 
		--- NEW UNIQUE_ID_KEY AS (DERIVED),
		CUST_NO AS CUST_NO,
		NTWK_NUMBER AS NTWK_NUMBER,
		NTWK_NAME AS NTWK_NAME,
		STATUS AS STATUS,
		NTWK_STATUS_DSC AS NTWK_STATUS_DSC,
		START_DATE AS START_DATE,
		END_DATE AS END_DATE,
		REF_DSC AS REF_DSC,
		NTWK_TYPE AS NTWK_TYPE,
		ACQUIRING_NTWK_NAME AS ACQUIRING_NTWK_NAME,
		ACQUIRING_NTWK_NUMBER AS ACQUIRING_NTWK_NUMBER,
		COB_DATE AS COB_DATE,
		NTWK_FINANCIAL_STREET_ADDRESS_1 AS NTWK_FINANCIAL_STREET_ADDRESS_1,
		NTWK_FINANCIAL_STREET_ADDRESS_2 AS NTWK_FINANCIAL_STREET_ADDRESS_2,
		NTWK_FINANCIAL_ADDRESS_CITY_NAME AS NTWK_FINANCIAL_ADDRESS_CITY_NAME,
		NTWK_FINANCIAL_ADDRESS_STATE_CODE AS NTWK_FINANCIAL_ADDRESS_STATE_CODE,
		NTWK_FINANCIAL_ADDRESS_ZIP_CODE AS NTWK_FINANCIAL_ADDRESS_ZIP_CODE,
		NTWK_FINANCIAL_ADDRESS_ZIP4_CODE AS NTWK_FINANCIAL_ADDRESS_ZIP4_CODE,
		NTWK_PHYSICAL_STREET_ADDRESS_1 AS NTWK_PHYSICAL_STREET_ADDRESS_1,
		NTWK_PHYSICAL_STREET_ADDRESS_2 AS NTWK_PHYSICAL_STREET_ADDRESS_2,
		NTWK_PHYSICAL_ADDRESS_CITY_NAME AS NTWK_PHYSICAL_ADDRESS_CITY_NAME,
		NTWK_PHYSICAL_ADDRESS_STATE_CODE AS NTWK_PHYSICAL_ADDRESS_STATE_CODE,
		NTWK_PHYSICAL_ADDRESS_ZIP_CODE AS NTWK_PHYSICAL_ADDRESS_ZIP_CODE,
		NTWK_PHYSICAL_ADDRESS_ZIP4_CODE AS NTWK_PHYSICAL_ADDRESS_ZIP4_CODE,
		NTWK_MAILING_STREET_ADDRESS_1 AS NTWK_MAILING_STREET_ADDRESS_1,
		NTWK_MAILING_STREET_ADDRESS_2 AS NTWK_MAILING_STREET_ADDRESS_2,
		NTWK_MAILING_ADDRESS_CITY_NAME AS NTWK_MAILING_ADDRESS_CITY_NAME,
		NTWK_MAILING_ADDRESS_STATE_CODE AS NTWK_MAILING_ADDRESS_STATE_CODE,
		NTWK_MAILING_ADDRESS_ZIP_CODE AS NTWK_MAILING_ADDRESS_ZIP_CODE,
		NTWK_MAILING_ADDRESS_ZIP4_CODE AS NTWK_MAILING_ADDRESS_ZIP4_CODE,
		CUST_SVC_AREA_CODE AS CUST_SVC_AREA_CODE,
		CUST_SVC_EXCHANGE AS CUST_SVC_EXCHANGE,
		CUST_SVC_NUMBER AS CUST_SVC_NUMBER,
		NTWK_CUSTOMER_SERVICE_FULL_PHONE_NUMBER AS NTWK_CUSTOMER_SERVICE_FULL_PHONE_NUMBER,
		MERGED_MCO AS MERGED_MCO 
				from SRC_NTWK
            )
----RENAME LAYER ----
,
RENAME_NTWK as ( SELECT 
			
			CUST_NO AS CUST_NO,NTWK_NUMBER AS NTWK_NUMBER,NTWK_NAME AS NTWK_NAME,STATUS AS STATUS,NTWK_STATUS_DSC AS NTWK_STATUS_DSC,START_DATE AS START_DATE,END_DATE AS END_DATE,REF_DSC AS REF_DSC,NTWK_TYPE AS NTWK_TYPE,ACQUIRING_NTWK_NAME AS ACQUIRING_NTWK_NAME,ACQUIRING_NTWK_NUMBER AS ACQUIRING_NTWK_NUMBER,COB_DATE AS COB_DATE,NTWK_FINANCIAL_STREET_ADDRESS_1 AS NTWK_FINANCIAL_STREET_ADDRESS_1,NTWK_FINANCIAL_STREET_ADDRESS_2 AS NTWK_FINANCIAL_STREET_ADDRESS_2,NTWK_FINANCIAL_ADDRESS_CITY_NAME AS NTWK_FINANCIAL_ADDRESS_CITY_NAME,NTWK_FINANCIAL_ADDRESS_STATE_CODE AS NTWK_FINANCIAL_ADDRESS_STATE_CODE,NTWK_FINANCIAL_ADDRESS_ZIP_CODE AS NTWK_FINANCIAL_ADDRESS_ZIP_CODE,NTWK_FINANCIAL_ADDRESS_ZIP4_CODE AS NTWK_FINANCIAL_ADDRESS_ZIP4_CODE,NTWK_PHYSICAL_STREET_ADDRESS_1 AS NTWK_PHYSICAL_STREET_ADDRESS_1,NTWK_PHYSICAL_STREET_ADDRESS_2 AS NTWK_PHYSICAL_STREET_ADDRESS_2,NTWK_PHYSICAL_ADDRESS_CITY_NAME AS NTWK_PHYSICAL_ADDRESS_CITY_NAME,NTWK_PHYSICAL_ADDRESS_STATE_CODE AS NTWK_PHYSICAL_ADDRESS_STATE_CODE,NTWK_PHYSICAL_ADDRESS_ZIP_CODE AS NTWK_PHYSICAL_ADDRESS_ZIP_CODE,NTWK_PHYSICAL_ADDRESS_ZIP4_CODE AS NTWK_PHYSICAL_ADDRESS_ZIP4_CODE,NTWK_MAILING_STREET_ADDRESS_1 AS NTWK_MAILING_STREET_ADDRESS_1,NTWK_MAILING_STREET_ADDRESS_2 AS NTWK_MAILING_STREET_ADDRESS_2,NTWK_MAILING_ADDRESS_CITY_NAME AS NTWK_MAILING_ADDRESS_CITY_NAME,NTWK_MAILING_ADDRESS_STATE_CODE AS NTWK_MAILING_ADDRESS_STATE_CODE,NTWK_MAILING_ADDRESS_ZIP_CODE AS NTWK_MAILING_ADDRESS_ZIP_CODE,NTWK_MAILING_ADDRESS_ZIP4_CODE AS NTWK_MAILING_ADDRESS_ZIP4_CODE,CUST_SVC_AREA_CODE AS CUST_SVC_AREA_CODE,CUST_SVC_EXCHANGE AS CUST_SVC_EXCHANGE,CUST_SVC_NUMBER AS CUST_SVC_NUMBER,NTWK_CUSTOMER_SERVICE_FULL_PHONE_NUMBER AS NTWK_CUSTOMER_SERVICE_FULL_PHONE_NUMBER,MERGED_MCO AS MERGED_MCO 
			from      LOGIC_NTWK
        )
----FILTER LAYER(uses aliases)----
,

        FILTER_NTWK as ( SELECT  * 
			from     RENAME_NTWK 
            WHERE RENAME_NTWK.NTWK_TYPE != 'QHP' and RENAME_NTWK.END_DATE IS NULL
			QUALIFY (CASE WHEN NTWK_NUMBER= LEAD(NTWK_NUMBER) OVER (ORDER BY NTWK_NUMBER, START_DATE, END_DATE)
            				AND START_DATE::DATE = LEAD(START_DATE::DATE) OVER (PARTITION BY NTWK_NUMBER ORDER BY  START_DATE, END_DATE) THEN 'Y' ELSE 'N' END) = 'N'
        )
----JOIN LAYER----
,
 JOIN_NTWK as ( SELECT * 
			from  FILTER_NTWK )

---- ETL LAYER -----------
-- THE BELOW QUERY IS TO IDENTIFY THE ACQUIRING MCO'S PATH
, ETL1 AS (
			SELECT CONNECT_BY_ROOT NTWK_NUMBER AS NTWK_NMBR, NTWK_NUMBER AS SUCSR_MCO,ACQUIRING_NTWK_NUMBER AS ACQ_MCO
			, SYS_CONNECT_BY_PATH (NTWK_NUMBER, ' -> ') AS PATH
			, NULLIF(SUBSTRING((SYS_CONNECT_BY_PATH (NTWK_NUMBER, ' -> ')),4,2),'->') FLTR
			FROM JOIN_NTWK
			//START WITH NTWK_NUMBER = '10014'
			CONNECT BY 
			NTWK_NUMBER   = PRIOR  ACQUIRING_NTWK_NUMBER
			ORDER BY PATH
		)

, ETL AS ( 
SELECT 
md5(cast(
    
    coalesce(cast(JOIN_NTWK.NTWK_NUMBER as 
    varchar
), '')

 as 
    varchar
)) as UNIQUE_ID_KEY
,JOIN_NTWK.CUST_NO
,JOIN_NTWK.NTWK_NUMBER
,case when JOIN_NTWK.NTWK_NUMBER in ('20001','20003') then 'OHIO BUREAU OF WORKERS'' COMPENSATION' else JOIN_NTWK.NTWK_NAME end as NTWK_NAME
,JOIN_NTWK.STATUS
,JOIN_NTWK.NTWK_STATUS_DSC
,JOIN_NTWK.START_DATE
,JOIN_NTWK.END_DATE
, case when JOIN_NTWK.NTWK_NUMBER in ('20001','20003') then 'OHIO BUREAU OF WORKERS'' COMPENSATION'
	   WHEN JOIN_NTWK.NTWK_NUMBER = '60001' THEN 'THIRD PARTY'
	   WHEN JOIN_NTWK.REF_DSC = 'PHARMACEUTICAL' THEN 'PHARMACY BENEFIT MANAGER' ELSE JOIN_NTWK.REF_DSC END AS REF_DSC
,CASE WHEN JOIN_NTWK.NTWK_NUMBER = '60001' THEN 'TDP' ELSE JOIN_NTWK.NTWK_TYPE END AS NTWK_TYPE
,TRIM(ETL1.PATH) AS MCO_ACQUISITION_PATH
-- ,JOIN_NTWK.ACQUIRING_NTWK_NAME
-- ,JOIN_NTWK.ACQUIRING_NTWK_NUMBER
, case when ACQ_NTWK.NTWK_NUMBER in ('20001','20003') then 'OHIO BUREAU OF WORKERS'' COMPENSATION' else ACQ_NTWK.NTWK_NAME end as ACQUIRING_NTWK_NAME
, ETL1.SUCSR_MCO as ACQUIRING_NTWK_NUMBER
,JOIN_NTWK.COB_DATE
,JOIN_NTWK.NTWK_FINANCIAL_STREET_ADDRESS_1
,JOIN_NTWK.NTWK_FINANCIAL_STREET_ADDRESS_2
,JOIN_NTWK.NTWK_FINANCIAL_ADDRESS_CITY_NAME
,JOIN_NTWK.NTWK_FINANCIAL_ADDRESS_STATE_CODE
,JOIN_NTWK.NTWK_FINANCIAL_ADDRESS_ZIP_CODE
,JOIN_NTWK.NTWK_FINANCIAL_ADDRESS_ZIP4_CODE
,JOIN_NTWK.NTWK_PHYSICAL_STREET_ADDRESS_1
,JOIN_NTWK.NTWK_PHYSICAL_STREET_ADDRESS_2
,JOIN_NTWK.NTWK_PHYSICAL_ADDRESS_CITY_NAME
,JOIN_NTWK.NTWK_PHYSICAL_ADDRESS_STATE_CODE
,JOIN_NTWK.NTWK_PHYSICAL_ADDRESS_ZIP_CODE
,JOIN_NTWK.NTWK_PHYSICAL_ADDRESS_ZIP4_CODE
,JOIN_NTWK.NTWK_MAILING_STREET_ADDRESS_1
,JOIN_NTWK.NTWK_MAILING_STREET_ADDRESS_2
,JOIN_NTWK.NTWK_MAILING_ADDRESS_CITY_NAME
,JOIN_NTWK.NTWK_MAILING_ADDRESS_STATE_CODE
,JOIN_NTWK.NTWK_MAILING_ADDRESS_ZIP_CODE
,JOIN_NTWK.NTWK_MAILING_ADDRESS_ZIP4_CODE
,JOIN_NTWK.CUST_SVC_AREA_CODE
,JOIN_NTWK.CUST_SVC_EXCHANGE
,JOIN_NTWK.CUST_SVC_NUMBER
,JOIN_NTWK.NTWK_CUSTOMER_SERVICE_FULL_PHONE_NUMBER
,JOIN_NTWK.MERGED_MCO
FROM JOIN_NTWK 
LEFT JOIN  ETL1 ON  JOIN_NTWK.NTWK_NUMBER = ETL1.NTWK_NMBR AND ETL1.FLTR IS NULL AND ETL1.ACQ_MCO IS NULL
LEFT JOIN JOIN_NTWK ACQ_NTWK ON trim(ETL1.SUCSR_MCO) = trim(ACQ_NTWK.NTWK_NUMBER)
)

SELECT * FROM ETL