----SRC LAYER----
WITH
SRC_PRDT as ( SELECT *     from      DEV_VIEWS.DBMOBP00.TMPPRDT ),
SRC_BTYP as ( SELECT *     from      DEV_VIEWS.BWC_PEACH.TMPBTYP ),
SRC_PREA as ( SELECT *     from      DEV_VIEWS.DBMOBP00.TMPPREA ),
SRC_PRCC as ( SELECT *     from      DEV_VIEWS.BWC_PEACH.TMPPRCC )
//SRC_PRDT as ( SELECT *     from      TMPPRDT),
//SRC_BTYP as ( SELECT *     from      TMPBTYP),
//SRC_PREA as ( SELECT *     from      TMPPREA)
----LOGIC LAYER---- 
,
LOGIC_PRDT as ( SELECT 
		cast(PRVDR_ID as timestamp) AS PRVDR_ID,
		cast(PRDT_CRT_DTTM as timestamp) AS PRDT_CRT_DTTM,
		UPPER(TRIM(PRSN_IND)) AS PRSN_IND,
		UPPER(TRIM(CRTSY_TITLE)) AS CRTSY_TITLE,
		UPPER(TRIM(LAST_NAME)) AS LAST_NAME,
		UPPER(TRIM(FIRST_NAME)) AS FIRST_NAME,
		UPPER(TRIM(MDL_NAME)) AS MDL_NAME,
		UPPER(TRIM(GNRTN_SFX)) AS GNRTN_SFX,
		UPPER(TRIM(PRFSN_SFX)) AS PRFSN_SFX,
		UPPER(TRIM(GNDR_CODE))  AS GNDR_CODE,
		cast(BIRTH_DATE as date) AS BIRTH_DATE,
		cast(DEATH_DATE as date) AS DEATH_DATE,
		UPPER(TRIM(BSNS_LEGAL_NAME)) AS BSNS_LEGAL_NAME,
		UPPER(TRIM(BSNS_TYPE_CODE)) AS BSNS_TYPE_CODE,
		UPPER(TRIM(CRT_USER_CODE)) AS CRT_USER_CODE,
		case when DCTVT_DTTM = '10000-01-01 00:00:00' THEN '2999-12-31 00:00:00' ELSE DCTVT_DTTM END::TIMESTAMP AS DCTVT_DTTM,
		UPPER(TRIM(DCTVT_USER_CODE)) AS DCTVT_USER_CODE,
		UPPER(TRIM(UPDT_PRGRM_NAME)) AS UPDT_PRGRM_NAME,
		CASE WHEN UPPER(PRSN_IND) = 'Y' then 'I'
			WHEN UPPER(PRSN_IND) = 'N' AND UPPER(BSNS_TYPE_CODE) = 'SLPRO' THEN 'S'
				ELSE 'E' END AS PRCT_TYPE_CODE
		
				from SRC_PRDT
            ),
LOGIC_BTYP as ( SELECT 
		UPPER(TRIM(BSNS_TYPE_NAME)) AS BSNS_TYPE_NAME,
		UPPER(TRIM(BSNS_TYPE_CODE)) AS BSNS_TYPE_CODE,
		case when DCTVT_DTTM = '10000-01-01 00:00:00' THEN '2999-12-31 00:00:00' ELSE DCTVT_DTTM END::TIMESTAMP AS DCTVT_DTTM
						from SRC_BTYP
            ),
LOGIC_PREA as ( SELECT 
		cast(PRVDR_ID as timestamp) AS PRVDR_ID,
		cast(PRVDR_BASE_NMBR as TEXT) AS PRVDR_BASE_NMBR,
		cast(PRVDR_SFX_NMBR as TEXT) AS PRVDR_SFX_NMBR 
				from SRC_PREA
            ),

LOGIC_PRCC as ( SELECT 
		UPPER(PRCT_TYPE_NAME) AS PRCT_TYPE_NAME,
		UPPER(PRCT_TYPE_CODE) AS PRCT_TYPE_CODE 
				from SRC_PRCC
            )
----RENAME LAYER ----
,
RENAME_PRDT as ( SELECT PRVDR_ID AS PRVDR_ID,PRDT_CRT_DTTM AS PRDT_CRT_DTTM,PRSN_IND AS PRSN_IND,CRTSY_TITLE AS CRTSY_TITLE
,LAST_NAME AS LAST_NAME,FIRST_NAME AS FIRST_NAME,MDL_NAME AS MDL_NAME,GNRTN_SFX AS GNRTN_SFX,PRFSN_SFX AS PRFSN_SFX
,GNDR_CODE AS GNDR_CODE,BIRTH_DATE AS BIRTH_DATE,DEATH_DATE AS DEATH_DATE,BSNS_LEGAL_NAME AS BSNS_LEGAL_NAME
,BSNS_TYPE_CODE AS BSNS_TYPE_CODE,CRT_USER_CODE AS CRT_USER_CODE,DCTVT_DTTM AS DCTVT_DTTM,DCTVT_USER_CODE AS DCTVT_USER_CODE
,UPDT_PRGRM_NAME AS UPDT_PRGRM_NAME,
						PRCT_TYPE_CODE AS PRCT_TYPE_CODE
			from      LOGIC_PRDT
        ),
RENAME_BTYP as ( SELECT BSNS_TYPE_NAME AS BSNS_TYPE_NAME,
			
			BSNS_TYPE_CODE AS BTYP_BSNS_TYPE_CODE,
			
			DCTVT_DTTM AS BTYP_DCTVT_DTTM 
			from      LOGIC_BTYP
        ),
RENAME_PREA as ( SELECT 
			
			PRVDR_ID AS PREA_PRVDR_ID,PRVDR_BASE_NMBR AS PRVDR_BASE_NMBR,PRVDR_SFX_NMBR AS PRVDR_SFX_NMBR 
			from      LOGIC_PREA
        ),
RENAME_PRCC as ( SELECT PRCT_TYPE_NAME AS PRCT_TYPE_NAME,
			
			PRCT_TYPE_CODE AS PRCC_PRCT_TYPE_CODE 
			from      LOGIC_PRCC
        )
----FILTER LAYER(uses aliases)----
,

        FILTER_PRDT as ( SELECT  * 
			from     RENAME_PRDT 
            
        ),

        FILTER_BTYP as ( SELECT  * 
			from     RENAME_BTYP 
            WHERE BTYP_DCTVT_DTTM > current_date
        ),

        FILTER_PREA as ( SELECT  * 
			from     RENAME_PREA 
            
        ),
		FILTER_PRCC as ( SELECT  * 
			from     RENAME_PRCC 
            
        )
----JOIN LAYER----
,
PRDT as ( SELECT * 
			from  FILTER_PRDT
				LEFT JOIN FILTER_BTYP on FILTER_PRDT.BSNS_TYPE_CODE = FILTER_BTYP.BTYP_BSNS_TYPE_CODE
				LEFT JOIN FILTER_PREA ON FILTER_PRDT.PRVDR_ID = FILTER_PREA.PREA_PRVDR_ID 
				LEFT JOIN FILTER_PRCC ON FILTER_PRDT.PRCT_TYPE_CODE = FILTER_PRCC.PRCC_PRCT_TYPE_CODE   ),
-- ETL LAYER ----
ETL AS (select PRVDR_ID
,PRDT_CRT_DTTM
,PRSN_IND
,CRTSY_TITLE
,LAST_NAME
,FIRST_NAME
,MDL_NAME
,GNRTN_SFX
,PRFSN_SFX
,case when trim(GNDR_CODE) ='' then NULL else GNDR_CODE end as GNDR_CODE
,BIRTH_DATE
,DEATH_DATE
,BSNS_LEGAL_NAME
,BSNS_TYPE_CODE
,BSNS_TYPE_NAME
,CRT_USER_CODE
,DCTVT_DTTM
,DCTVT_USER_CODE
,UPDT_PRGRM_NAME
,BTYP_BSNS_TYPE_CODE
,BTYP_DCTVT_DTTM
,PREA_PRVDR_ID
,PRVDR_BASE_NMBR
,lpad(PRVDR_SFX_NMBR::TEXT,4,'0') as PRVDR_SFX_NMBR
, NULLIF(TRIM(CASE WHEN BSNS_LEGAL_NAME IS NOT NULL THEN BSNS_LEGAL_NAME
	ELSE COALESCE(FIRST_NAME,'')||' '||COALESCE(MDL_NAME,'')||' '||COALESCE(LAST_NAME,'')||' '||COALESCE(GNRTN_SFX,'')||' '||COALESCE(PRFSN_SFX,'') END), '') AS PRVDR_LEGAL_NAME
, PRCT_TYPE_CODE
, PRCT_TYPE_NAME
, PRCC_PRCT_TYPE_CODE
 from PRDT)
SELECT * FROM ETL