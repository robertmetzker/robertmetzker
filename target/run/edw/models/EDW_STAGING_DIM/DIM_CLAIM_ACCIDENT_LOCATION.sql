

      create or replace  table DEV_EDW.EDW_STAGING_DIM.DIM_CLAIM_ACCIDENT_LOCATION  as
      (

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
  
     last_value(UNIQUE_ID_KEY) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as ACCIDENT_LOCATION_HKEY, 
     last_value(ACCIDENT_LOCATION_CITY) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as ACCIDENT_LOCATION_CITY, 
     last_value(ACCIDENT_LOCATION_ZIP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as ACCIDENT_LOCATION_ZIP_CODE, 
  ACCIDENT_PREMISE_TYPE_DESC,
  ACCIDENT_LOCATION_COUNTRY,
  ACCIDENT_LOCATION_STATE_CODE,
  ACCIDENT_LOCATION_STATE,
  ACCIDENT_LOCATION_COUNTY,
  ACCIDENT_LOCATION_NAME,
  ACCIDENT_ADDRESS_LINE_1,
  ACCIDENT_ADDRESS_LINE_2,
  ACCIDENT_LOCATION_COMMENT

	FROM EDW_STAGING.DIM_CLAIM_ACCIDENT_LOCATION_SCDALL_STEP2)

select 
  ACCIDENT_LOCATION_HKEY
, ACCIDENT_PREMISE_TYPE_DESC
, ACCIDENT_LOCATION_COUNTRY
, ACCIDENT_LOCATION_STATE_CODE
, ACCIDENT_LOCATION_STATE
, ACCIDENT_LOCATION_COUNTY
, ACCIDENT_LOCATION_CITY
, ACCIDENT_LOCATION_ZIP_CODE
, ACCIDENT_LOCATION_NAME
, ACCIDENT_ADDRESS_LINE_1
, ACCIDENT_ADDRESS_LINE_2
, ACCIDENT_LOCATION_COMMENT
, CURRENT_TIMESTAMP AS LOAD_DATETIME
, try_to_TIMESTAMP('Invalid')  AS UPDATE_DATETIME
, 'CORESUITE' AS PRIMARY_SOURCE_SYSTEM
 from SCD
      );
    