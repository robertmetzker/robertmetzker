

      create or replace  table DEV_EDW.EDW_STAGING_DIM.DIM_CASE_STATUS  as
      (

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(CASE_STATE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATE_CODE, 
     last_value(CASE_STATUS_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATUS_CODE, 
     last_value(CASE_STATUS_REASON_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATUS_REASON_CODE, 
     last_value(CASE_STATE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATE_DESC, 
     last_value(CASE_STATUS_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATUS_DESC, 
     last_value(CASE_STATUS_REASON_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CASE_STATUS_REASON_DESC
	FROM EDW_STAGING.DIM_CASE_STATUS_SCDALL_STEP2),

ETL AS( 
SELECT
     UNIQUE_ID_KEY AS CASE_STATUS_HKEY
    , UNIQUE_ID_KEY
    , CASE_STATE_CODE
    , CASE_STATUS_CODE
    , CASE_STATUS_REASON_CODE
    , CASE_STATE_DESC
    , CASE_STATUS_DESC
    , CASE_STATUS_REASON_DESC
    , CURRENT_TIMESTAMP AS  LOAD_DATETIME
    , TRY_TO_TIMESTAMP('Invalid') AS UPDATE_DATETIME
    ,'CORESUITE' AS PRIMARY_SOURCE_SYSTEM 
 from SCD
)

select * from ETL
      );
    