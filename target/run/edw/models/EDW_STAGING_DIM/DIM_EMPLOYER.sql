

      create or replace  table DEV_EDW.EDW_STAGING_DIM.DIM_EMPLOYER  as
      (

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(CUSTOMER_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as CUSTOMER_NUMBER, 
     last_value(BUSINESS_1099_IND) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as BUSINESS_1099_IND, 
     last_value(OWNERSHIP_TYPE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as OWNERSHIP_TYPE, 
     last_value(BUSINESS_YEAR_ESTABLISHED) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as BUSINESS_YEAR_ESTABLISHED, 
     last_value(BUSINESS_CEASED_OPERATIONS_DATE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as BUSINESS_CEASED_OPERATIONS_DATE, 
     last_value(PRIMARY_LANGUAGE_TYPE_DESCRIPTION) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_LANGUAGE_TYPE_DESCRIPTION, 
     last_value(PRIMARY_BUSINESS_PHONE_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_BUSINESS_PHONE_NUMBER, 
     last_value(TAX_ID_UNAVAILABLE_IND) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as TAX_ID_UNAVAILABLE_IND, 
     last_value(TAX_EXEMPT_IND) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as TAX_EXEMPT_IND, 
     last_value(TAX_ID_TYPE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as TAX_ID_TYPE_CODE, 
     last_value(FORMATTED_FEIN_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as TAX_ID_NUMBER, 
     last_value(TAX_ID_SEQUENCE_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as TAX_ID_SEQUENCE_NUMBER,                              
    last_value(DOCUMENT_BLOCK_IND) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_BLOCK_IND,
     last_value(PRIMARY_BUSINESS_FAX_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_BUSINESS_FAX_NUMBER,
     last_value(PRIMARY_BUSINESS_PHONE_EXTENSION_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_BUSINESS_PHONE_EXTENSION_NUMBER,
     last_value(PRIMARY_BUSINESS_FAX_EXTENSION_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_BUSINESS_FAX_EXTENSION_NUMBER,
    last_value(PRIMARY_BUSINESS_EMAIL_ADDRESS) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_BUSINESS_EMAIL_ADDRESS,
     last_value(PRIMARY_CONTACT_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as PRIMARY_CONTACT_NAME,
      last_value(INDUSTRY_GROUP_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as INDUSTRY_GROUP_CODE, 
     last_value(INDUSTRY_GROUP_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by dbt_updated_at 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as INDUSTRY_GROUP_DESC,                                           
 BUSINESS_NAME, 
 PRIMARY_DBA_NAME, 
 PHYSICAL_ADDRESS_LINE_1, 
 PHYSICAL_ADDRESS_LINE_2, 
 PHYSICAL_ADDRESS_CITY, 
 PHYSICAL_ADDRESS_STATE_CODE, 
 PHYSICAL_ADDRESS_STATE_NAME, 
 PHYSICAL_ADDRESS_POSTAL_CODE, 
 PHYSICAL_ADDRESS_COUNTY, 
 MAIL_ADDRESS_LINE_1, 
 MAIL_ADDRESS_LINE_2, 
 MAIL_ADDRESS_CITY, 
 MAIL_ADDRESS_STATE_CODE, 
 MAIL_ADDRESS_STATE_NAME, 
 MAIL_ADDRESS_POSTAL_CODE,
 MAIL_ADDRESS_COUNTY,
 DBT_VALID_FROM AS EFFECTIVE_TIMESTAMP,
 DBT_VALID_TO   AS END_TIMESTAMP,
 COALESCE(CASE WHEN (ROW_NUMBER() OVER (PARTITION BY UNIQUE_ID_KEY ORDER BY DBT_VALID_FROM )) = 1 
      AND  CAST(DBT_VALID_FROM AS DATE) <> '1901-01-01' THEN CAST(DBT_VALID_FROM AS DATE)
               WHEN CAST(DBT_VALID_FROM AS DATE) = '1901-01-01' then CAST(DBT_VALID_FROM AS DATE)
               WHEN CAST(DBT_VALID_FROM AS DATE) <> '1901-01-01' THEN dateadd(day,1,CAST(DBT_VALID_FROM AS DATE))
               ELSE CAST(DBT_VALID_FROM AS DATE) END,'1901-01-01'::DATE) as EFFECTIVE_DATE,

 CAST(DBT_VALID_TO AS DATE) as END_DATE
     
	FROM EDW_STAGING.DIM_EMPLOYER_SCDALL_STEP2),

--ETL LAYER --
ETL AS (select 
 md5(cast(
    
    coalesce(cast(CUSTOMER_NUMBER as 
    varchar
), '') || '-' || coalesce(cast(EFFECTIVE_DATE as 
    varchar
), '')

 as 
    varchar
)) as EMPLOYER_HKEY
, UNIQUE_ID_KEY
, CUSTOMER_NUMBER
, BUSINESS_NAME
, BUSINESS_1099_IND
, OWNERSHIP_TYPE
, BUSINESS_YEAR_ESTABLISHED
, BUSINESS_CEASED_OPERATIONS_DATE
, PRIMARY_DBA_NAME
, PRIMARY_LANGUAGE_TYPE_DESCRIPTION
, PRIMARY_BUSINESS_PHONE_NUMBER
, PRIMARY_BUSINESS_PHONE_EXTENSION_NUMBER
, PRIMARY_BUSINESS_FAX_NUMBER
, PRIMARY_BUSINESS_FAX_EXTENSION_NUMBER
, PRIMARY_BUSINESS_EMAIL_ADDRESS
, PRIMARY_CONTACT_NAME
, PHYSICAL_ADDRESS_LINE_1
, PHYSICAL_ADDRESS_LINE_2
, PHYSICAL_ADDRESS_CITY
, PHYSICAL_ADDRESS_STATE_CODE
, PHYSICAL_ADDRESS_STATE_NAME
, PHYSICAL_ADDRESS_POSTAL_CODE
, PHYSICAL_ADDRESS_COUNTY
, MAIL_ADDRESS_LINE_1
, MAIL_ADDRESS_LINE_2
, MAIL_ADDRESS_CITY
, MAIL_ADDRESS_STATE_CODE
, MAIL_ADDRESS_STATE_NAME
, MAIL_ADDRESS_POSTAL_CODE
, MAIL_ADDRESS_COUNTY
, TAX_ID_UNAVAILABLE_IND
, TAX_EXEMPT_IND
, TAX_ID_TYPE_CODE
, TAX_ID_NUMBER
, TAX_ID_SEQUENCE_NUMBER
, DOCUMENT_BLOCK_IND
,INDUSTRY_GROUP_CODE
,INDUSTRY_GROUP_DESC
, CASE WHEN END_DATE IS NULL THEN 'Y' ELSE 'N' END AS CURRENT_RECORD_IND
, EFFECTIVE_DATE AS RECORD_EFFECTIVE_DATE
, END_DATE AS RECORD_END_DATE
, EFFECTIVE_TIMESTAMP AS LOAD_DATETIME
, END_TIMESTAMP AS UPDATE_DATETIME
, 'CORESUITE' AS PRIMARY_SOURCE_SYSTEM 
 
   from SCD )

select * from ETL
      );
    