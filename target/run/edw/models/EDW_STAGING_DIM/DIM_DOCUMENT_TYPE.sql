

      create or replace  table DEV_EDW.EDW_STAGING_DIM.DIM_DOCUMENT_TYPE  as
      (

 WITH  SCD AS ( 
	SELECT  UNIQUE_ID_KEY,
     last_value(md5(cast(
    
    coalesce(cast(DOCUMENT_TYPE_REFERENCE_NUMBER as 
    varchar
), '') || '-' || coalesce(cast(DOCUMENT_VERSION_NUMBER as 
    varchar
), '')

 as 
    varchar
))) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_HKEY, 
     last_value(DOCUMENT_TYPE_REFERENCE_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_REFERENCE_NUMBER, 
     last_value(DOCUMENT_TYPE_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_NAME, 
     last_value(DOCUMENT_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_DESC, 
     last_value(DOCUMENT_VERSION_NUMBER) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_VERSION_NUMBER, 
     last_value(DOCUMENT_VERSION_EVENT_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_VERSION_EVENT_DESC, 
     last_value(DOCUMENT_OCCURRENCE_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_OCCURRENCE_TYPE_CODE, 
     last_value(DOCUMENT_OCCURRENCE_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_OCCURRENCE_TYPE_DESC, 
     last_value(DOCUMENT_PAPER_STOCK_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_PAPER_STOCK_TYPE_CODE, 
     last_value(DOCUMENT_PAPER_STOCK_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_PAPER_STOCK_TYPE_DESC, 
     last_value(DOCUMENT_CATEGORY_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_CATEGORY_TYPE_CODE, 
     last_value(DOCUMENT_CATEGORY_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_CATEGORY_TYPE_DESC, 
     last_value(DOCUMENT_SOURCE_TYPE_CODE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_SOURCE_TYPE_CODE, 
     last_value(DOCUMENT_SOURCE_TYPE_DESC) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_SOURCE_TYPE_DESC, 
     last_value(DOCUMENT_TYPE_VERSION_EFFECTIVE_DATE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_VERSION_EFFECTIVE_DATE, 
     last_value(DOCUMENT_TYPE_VERSION_END_DATE) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_VERSION_END_DATE, 
     last_value(DOCUMENT_TYPE_VERSION_TEMPLATE_FILE_NAME) over 
        (partition by UNIQUE_ID_KEY 
        order by UNIQUE_ID_KEY 
            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
            ) as DOCUMENT_TYPE_VERSION_TEMPLATE_FILE_NAME
     
	FROM EDW_STAGING.DIM_DOCUMENT_TYPE_SCDALL_STEP2),

------------- ETL LAYER -----------

ETL AS (select 
  DOCUMENT_TYPE_HKEY
, UNIQUE_ID_KEY
, DOCUMENT_TYPE_REFERENCE_NUMBER
, DOCUMENT_TYPE_NAME
, DOCUMENT_TYPE_DESC
, DOCUMENT_VERSION_NUMBER
, DOCUMENT_VERSION_EVENT_DESC
, DOCUMENT_OCCURRENCE_TYPE_CODE
, DOCUMENT_OCCURRENCE_TYPE_DESC
, DOCUMENT_PAPER_STOCK_TYPE_CODE
, DOCUMENT_PAPER_STOCK_TYPE_DESC
, DOCUMENT_CATEGORY_TYPE_CODE
, DOCUMENT_CATEGORY_TYPE_DESC
, DOCUMENT_SOURCE_TYPE_CODE
, DOCUMENT_SOURCE_TYPE_DESC
, DOCUMENT_TYPE_VERSION_EFFECTIVE_DATE
, DOCUMENT_TYPE_VERSION_END_DATE
, DOCUMENT_TYPE_VERSION_TEMPLATE_FILE_NAME
, CASE WHEN DOCUMENT_TYPE_VERSION_END_DATE IS NULL THEN 'Y' ELSE 'N' END AS CURRENT_RECORD_IND
, CURRENT_TIMESTAMP AS LOAD_DATETIME
, try_to_TIMESTAMP('Invalid')  AS UPDATE_DATETIME
, 'CORESUITE' AS PRIMARY_SOURCE_SYSTEM
 from SCD )
SELECT * FROM ETL
      );
    