

      create or replace  table DEV_EDW.STAGING.STG_INVOICE_DRG  as
      (----SRC LAYER----
WITH
SRC_ID as ( SELECT *     from      DEV_VIEWS.BASE.INVOICE_DRG ),
SRC_HDR as ( SELECT *     from      DEV_VIEWS.BASE.INVOICE_HEADER )
//SRC_ID as ( SELECT *     from      INVOICE_DRG)
----LOGIC LAYER----
,
LOGIC_ID as ( SELECT 
		INVOICE_HEADER_ID AS INVOICE_HEADER_ID,
		DATE_SENT AS DATE_SENT,
		UPPER(TRIM(DRG_NUMBER)) AS DRG_NUMBER,
		UPPER(TRIM(DRG_TITLE)) AS DRG_TITLE,
---		TRY_TO_NUMERIC(MAJOR_CATEGORY) AS MAJOR_CATEGORY,
		MAJOR_CATEGORY AS MAJOR_CATEGORY,
		UPPER(TRIM(MAJOR_TITLE)) AS MAJOR_TITLE,
		--UPPER(TRIM(DIAG_1)) AS DIAG_1,
		UPPER(TRIM(case when length(DIAG_1) <= 3 then DIAG_1 else left(DIAG_1,3)||'.'||substring(DIAG_1,4) end )) AS DIAG_1,
		--UPPER(TRIM(DIAG_2)) AS DIAG_2,
		UPPER(TRIM(case when length(DIAG_2) <= 3 then DIAG_2 else left(DIAG_2,3)||'.'||substring(DIAG_2,4) end )) AS DIAG_2,
		--UPPER(TRIM(DIAG_3)) AS DIAG_3,
		UPPER(TRIM(case when length(DIAG_3) <= 3 then DIAG_3 else left(DIAG_3,3)||'.'||substring(DIAG_3,4) end )) AS DIAG_3,
		--UPPER(TRIM(DIAG_4)) AS DIAG_4,
		UPPER(TRIM(case when length(DIAG_4) <= 3 then DIAG_4 else left(DIAG_4,3)||'.'||substring(DIAG_4,4) end )) AS DIAG_4,
		--UPPER(TRIM(DIAG_5)) AS DIAG_5,
		UPPER(TRIM(case when length(DIAG_5) <= 3 then DIAG_5 else left(DIAG_5,3)||'.'||substring(DIAG_5,4) end )) AS DIAG_5,
		--UPPER(TRIM(OR_PROC_1)) AS OR_PROC_1,
		UPPER(TRIM(case when length(OR_PROC_1) = 7 then OR_PROC_1 else left(OR_PROC_1,2)||'.'||substring(OR_PROC_1,3) end ))  AS OR_PROC_1,
		--UPPER(TRIM(OR_PROC_2)) AS OR_PROC_2,
		UPPER(TRIM(case when length(OR_PROC_2) = 7 then OR_PROC_2 else left(OR_PROC_2,2)||'.'||substring(OR_PROC_2,3) end )) AS OR_PROC_2,
		--UPPER(TRIM(OR_PROC_3)) AS OR_PROC_3,
		UPPER(TRIM(case when length(OR_PROC_3) = 7 then OR_PROC_3 else left(OR_PROC_3,2)||'.'||substring(OR_PROC_3,3) end )) AS OR_PROC_3,
		--UPPER(TRIM(OR_PROC_4)) AS OR_PROC_4,
		UPPER(TRIM(case when length(OR_PROC_4) = 7 then OR_PROC_4 else left(OR_PROC_4,2)||'.'||substring(OR_PROC_4,3) end )) AS OR_PROC_4,
		--UPPER(TRIM(OR_PROC_5)) AS OR_PROC_5,
		UPPER(TRIM(case when length(OR_PROC_5) = 7 then OR_PROC_5 else left(OR_PROC_5,2)||'.'||substring(OR_PROC_5,3) end )) AS OR_PROC_5,
		--UPPER(TRIM(NOR_PROC_1)) AS NOR_PROC_1,
		UPPER(TRIM(case when length(NOR_PROC_1) = 7 then NOR_PROC_1 else left(NOR_PROC_1,2)||'.'||substring(NOR_PROC_1,3) end  )) AS NOR_PROC_1,
		--UPPER(TRIM(NOR_PROC_2)) AS NOR_PROC_2,
		UPPER(TRIM(case when length(NOR_PROC_2) = 7 then NOR_PROC_2 else left(NOR_PROC_2,2)||'.'||substring(NOR_PROC_2,3) end )) AS NOR_PROC_2,
		--UPPER(TRIM(NOR_PROC_3)) AS NOR_PROC_3,
		UPPER(TRIM(case when length(NOR_PROC_3) = 7 then NOR_PROC_3 else left(NOR_PROC_3,2)||'.'||substring(NOR_PROC_3,3) end )) AS NOR_PROC_3,
		--UPPER(TRIM(NOR_PROC_4)) AS NOR_PROC_4,
		UPPER(TRIM(case when length(NOR_PROC_4) = 7 then NOR_PROC_4 else left(NOR_PROC_4,2)||'.'||substring(NOR_PROC_4,3) end )) AS NOR_PROC_4,
		--UPPER(TRIM(NOR_PROC_5)) AS NOR_PROC_5,
		UPPER(TRIM(case when length(NOR_PROC_5) = 7 then NOR_PROC_5 else left(NOR_PROC_5,2)||'.'||substring(NOR_PROC_5,3) end )) AS NOR_PROC_5,
		UPPER(TRIM(GRP_METHOD)) AS GRP_METHOD,
		UPPER(TRIM(GRP_VERSION)) AS GRP_VERSION,
		UPPER(TRIM(PRC_VERSION)) AS PRC_VERSION,
		UPPER(TRIM(RETURN_CODE)) AS RETURN_CODE,
		UPPER(TRIM(RETURN_EXT)) AS RETURN_EXT,
		UPPER(TRIM(RETURN_MSG)) AS RETURN_MSG 
				from SRC_ID
            ),

LOGIC_HDR as ( SELECT 
				INVOICE_HEADER_ID AS INVOICE_HEADER_ID,
		cast(RECEIPT_DATE as DATE) AS RECEIPT_DATE,
		BATCH_NUMBER AS BATCH_NUMBER,
		BATCH_SEQUENCE AS BATCH_SEQUENCE,
		EXTENSION_NUMBER AS EXTENSION_NUMBER 
				from SRC_HDR
            )
----RENAME LAYER ----
,
RENAME_ID as ( SELECT INVOICE_HEADER_ID AS INVOICE_HEADER_ID,DATE_SENT AS DATE_SENT,DRG_NUMBER AS DRG_NUMBER,DRG_TITLE AS DRG_TITLE,MAJOR_CATEGORY AS MAJOR_CATEGORY,MAJOR_TITLE AS MAJOR_TITLE,DIAG_1 AS DIAG_1,DIAG_2 AS DIAG_2,DIAG_3 AS DIAG_3,DIAG_4 AS DIAG_4,DIAG_5 AS DIAG_5,OR_PROC_1 AS OR_PROC_1,OR_PROC_2 AS OR_PROC_2,OR_PROC_3 AS OR_PROC_3,OR_PROC_4 AS OR_PROC_4,OR_PROC_5 AS OR_PROC_5,NOR_PROC_1 AS NOR_PROC_1,NOR_PROC_2 AS NOR_PROC_2,NOR_PROC_3 AS NOR_PROC_3,NOR_PROC_4 AS NOR_PROC_4,NOR_PROC_5 AS NOR_PROC_5,GRP_METHOD AS GRP_METHOD,GRP_VERSION AS GRP_VERSION,PRC_VERSION AS PRC_VERSION,RETURN_CODE AS RETURN_CODE,RETURN_EXT AS RETURN_EXT,RETURN_MSG AS RETURN_MSG 
			from      LOGIC_ID
        ),

RENAME_HDR as ( SELECT 
			TO_CHAR(RECEIPT_DATE, 'MM/DD/YYYY')||' '|| LPAD(BATCH_NUMBER, 4, '0') ||' '|| LPAD(BATCH_SEQUENCE, 2, '0') ||' '|| LPAD(EXTENSION_NUMBER, 2, '0')  as INVOICE_NUMBER,
				
			INVOICE_HEADER_ID AS HDR_INVOICE_HEADER_ID,RECEIPT_DATE AS RECEIPT_DATE,BATCH_NUMBER AS BATCH_NUMBER,BATCH_SEQUENCE AS BATCH_SEQUENCE,EXTENSION_NUMBER AS EXTENSION_NUMBER 
			from      LOGIC_HDR
        )
----FILTER LAYER(uses aliases)----
,

        FILTER_ID as ( SELECT  * 
			from     RENAME_ID 
            
        ),

        FILTER_HDR as ( SELECT  * 
			from     RENAME_HDR 
            
        )
----JOIN LAYER----
,
ID as ( SELECT * 
			from  FILTER_ID
				INNER JOIN FILTER_HDR ON FILTER_ID.INVOICE_HEADER_ID = FILTER_HDR.HDR_INVOICE_HEADER_ID  )
select * from ID
      );
    