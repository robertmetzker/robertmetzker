

      create or replace  table DEV_EDW.STAGING.DST_INJURED_WORKER  as
      (-- depends_on: STAGING.STG_CUSTOMER_ADDRESS_MAIL
-- depends_on: STAGING.STG_CUSTOMER_ADDRESS_PHYS
-- depends_on: STAGING.STG_PERSON_HISTORY
----SRC LAYER----
WITH
SRC_PRSN as ( SELECT *     from      STAGING.STG_PERSON ),
SRC_PTCP as ( SELECT *     from      STAGING.STG_PARTICIPATION ),
SRC_CN as ( SELECT *     from      STAGING.STG_CUSTOMER_NAME ),
SRC_SSRD as ( SELECT *     from      STAGING.STG_CUSTOMER_SOC_SEC_RET_DTL ),
SRC_DB as ( SELECT *     from      STAGING.STG_CUSTOMER_BLOCK ),
SRC_TB as ( SELECT *     from      STAGING.STG_CUSTOMER_BLOCK ),
SRC_PA as ( SELECT *     from      STAGING.STG_CUSTOMER_ADDRESS ),
SRC_MA as ( SELECT *     from      STAGING.STG_CUSTOMER_ADDRESS ),
SRC_CL as ( SELECT *     from      STAGING.STG_CUSTOMER_LANGUAGE ),
SRC_PH as ( SELECT *     from     STAGING.STG_PERSON_HISTORY ),
//SRC_PRSN as ( SELECT *     from      STG_PERSON),
//SRC_PTCP as ( SELECT *     from      STG_PARTICIPATION),
//SRC_CN as ( SELECT *     from      STG_CUSTOMER_NAME),
//SRC_SSRD as ( SELECT *     from      STG_CUSTOMER_SOC_SEC_RET_DTL),
//SRC_DB as ( SELECT *     from      STG_CUSTOMER_BLOCK),
//SRC_TB as ( SELECT *     from      STG_CUSTOMER_BLOCK),
//SRC_PA as ( SELECT *     from      STG_CUSTOMER_ADDRESS),
//SRC_MA as ( SELECT *     from      STG_CUSTOMER_ADDRESS),
//SRC_CL as ( SELECT *     from      STG_CUSTOMER_LANGUAGE),
//SRC_PH as ( SELECT *     from     STG_PERSON_HISTORY) ,

----LOGIC LAYER----

LOGIC_PRSN as ( SELECT 
		CUST_ID AS CUST_ID,
		TRIM(GNDR_TYP_CD) AS GNDR_TYP_CD,
		TRIM(GNDR_TYP_NM) AS GNDR_TYP_NM,
		TRIM(MAR_STS_TYP_CD) AS MAR_STS_TYP_CD,
		TRIM(MAR_STS_TYP_NM) AS MAR_STS_TYP_NM,
		PRSN_BIRTH_DATE AS PRSN_BIRTH_DATE,
		PRSN_DEATH_DATE AS PRSN_DEATH_DATE 
				from SRC_PRSN
            ),
LOGIC_PTCP as ( SELECT DISTINCT
		CUST_NO::integer AS CUST_NO,
		TRIM(CUST_FRGN_CITZ_IND) AS CUST_FRGN_CITZ_IND,
		TRIM(PTCP_TYP_NM) AS PTCP_TYP_NM,
		CUST_ID AS CUST_ID,
		TRIM(PTCP_TYP_CD) AS PTCP_TYP_CD 
				from SRC_PTCP
            ),
LOGIC_CN as ( SELECT 
		TRIM(CUST_NM_TTL_TYP_NM) AS CUST_NM_TTL_TYP_NM,
		TRIM(CUST_NM_FST) AS CUST_NM_FST,
		TRIM(CUST_NM_MID) AS CUST_NM_MID,
		TRIM(CUST_NM_LST) AS CUST_NM_LST,
		TRIM(CUST_NM_SFX_TYP_NM) AS CUST_NM_SFX_TYP_NM,
		TRIM(CUST_NM_NM) AS CUST_NM_NM,
		CUST_ID AS CUST_ID,
		TRIM(CUST_NM_TYP_CD) AS CUST_NM_TYP_CD,
		CUST_NM_EFF_DT AS CUST_NM_EFF_DT,
		CUST_NM_END_DT AS CUST_NM_END_DT,
		AUDIT_USER_CREA_DTM AS AUDIT_USER_CREA_DTM,
		TRIM(VOID_IND) AS VOID_IND 
				from SRC_CN
            ),
LOGIC_SSRD as ( SELECT 
		CUST_SOC_SEC_RET_DTL_DT AS CUST_SOC_SEC_RET_DTL_DT,
		CUST_ID AS CUST_ID,
		TRIM(VOID_IND) AS VOID_IND 
				from SRC_SSRD
            ),
LOGIC_DB as ( SELECT 
		B_BLK_ID AS B_BLK_ID,
		CUST_ID AS CUST_ID,
		TRIM(BLK_TYP_CD) AS BLK_TYP_CD,
		BLK_EFF_DT,
		BLK_END_DT AS BLK_END_DT,
		TRIM(VOID_IND) AS VOID_IND 
				from SRC_DB
            ),
LOGIC_TB as ( SELECT 
		B_BLK_ID AS B_BLK_ID,
		CUST_ID AS CUST_ID,
		TRIM(BLK_TYP_CD) AS BLK_TYP_CD,
		BLK_EFF_DT,
		BLK_END_DT AS BLK_END_DT,
		TRIM(VOID_IND) AS VOID_IND 
				from SRC_TB
            ),
LOGIC_PA as ( SELECT 
		TRIM(CUST_ADDR_STR_1) AS CUST_ADDR_STR_1,
		TRIM(CUST_ADDR_STR_2) AS CUST_ADDR_STR_2,
		TRIM(CUST_ADDR_CITY_NM) AS CUST_ADDR_CITY_NM,
		TRIM(STT_ABRV) AS STT_ABRV,
		TRIM(STT_NM) AS STT_NM,
		TRIM(CUST_ADDR_POST_CD) AS CUST_ADDR_POST_CD,
		TRIM(CUST_ADDR_CNTY_NM) AS CUST_ADDR_CNTY_NM,
		TRIM(CNTRY_NM) AS CNTRY_NM,
		TRIM(CUST_ADDR_VLDT_IND) AS CUST_ADDR_VLDT_IND,
		TRIM(CUST_ADDR_COMT) AS CUST_ADDR_COMT,
		cast(CUST_ADDR_EFF_DATE as DATE) AS CUST_ADDR_EFF_DATE,
		cast(CUST_ADDR_END_DATE as DATE) AS CUST_ADDR_END_DATE,
		CUST_ID AS CUST_ID,
		TRIM(CUST_ADDR_TYP_CD) AS CUST_ADDR_TYP_CD,
		AUDIT_USER_CREA_DTM AS AUDIT_USER_CREA_DTM,
		TRIM(VOID_IND) AS VOID_IND 
				from SRC_PA
            ),
LOGIC_MA as ( SELECT 
		CUST_ADDR_STR_1 AS CUST_ADDR_STR_1,
		CUST_ADDR_STR_2 AS CUST_ADDR_STR_2,
		CUST_ADDR_CITY_NM AS CUST_ADDR_CITY_NM,
		STT_ABRV AS STT_ABRV,
		STT_NM AS STT_NM,
		CUST_ADDR_POST_CD AS CUST_ADDR_POST_CD,
		CUST_ADDR_CNTY_NM AS CUST_ADDR_CNTY_NM,
		CNTRY_NM AS CNTRY_NM,
		CUST_ADDR_VLDT_IND AS CUST_ADDR_VLDT_IND,
		CUST_ADDR_COMT AS CUST_ADDR_COMT,
		cast(CUST_ADDR_EFF_DATE as DATE) AS CUST_ADDR_EFF_DATE,
		cast(CUST_ADDR_END_DATE as DATE) AS CUST_ADDR_END_DATE,
		CUST_ID AS CUST_ID,
		CUST_ADDR_TYP_CD AS CUST_ADDR_TYP_CD,
		AUDIT_USER_CREA_DTM AS AUDIT_USER_CREA_DTM,
		VOID_IND AS VOID_IND 
				from SRC_MA
            ),
LOGIC_CL as ( SELECT 
		UPPER(LANG_TYP_NM) AS LANG_TYP_NM,
		UPPER(CUST_LANG_PRI_IND) AS CUST_LANG_PRI_IND,
		UPPER(VOID_IND) AS VOID_IND,
		CUST_ID AS CUST_ID 
				from SRC_CL
            ),
LOGIC_PH as ( SELECT 
		  CUST_ID                                            as                                            CUST_ID 
		, PRSN_DEATH_DATE                                    as                                    PRSN_DEATH_DATE 
		, cast( HIST_EFF_DTM as DATE )                       as                                       HIST_EFF_DTM 
		from SRC_PH            )

----RENAME LAYER ----
,
RENAME_PRSN as ( SELECT CUST_ID AS CUST_ID,GNDR_TYP_CD AS GNDR_TYP_CD,GNDR_TYP_NM AS GNDR_TYP_NM,MAR_STS_TYP_CD AS MAR_STS_TYP_CD,MAR_STS_TYP_NM AS MAR_STS_TYP_NM,PRSN_BIRTH_DATE AS PRSN_BIRTH_DATE,PRSN_DEATH_DATE AS PRSN_DEATH_DATE 
			from      LOGIC_PRSN
        ),
RENAME_PTCP as ( SELECT CUST_NO AS CUST_NO,CUST_FRGN_CITZ_IND AS CUST_FRGN_CITZ_IND,PTCP_TYP_NM AS PTCP_TYP_NM,
			CUST_ID AS PTCP_CUST_ID,PTCP_TYP_CD AS PTCP_TYP_CD 
			from      LOGIC_PTCP
        ),
RENAME_CN as ( SELECT CUST_NM_TTL_TYP_NM AS CUST_NM_TTL_TYP_NM,CUST_NM_FST AS CUST_NM_FST,CUST_NM_MID AS CUST_NM_MID,CUST_NM_LST AS CUST_NM_LST,CUST_NM_SFX_TYP_NM AS CUST_NM_SFX_TYP_NM,CUST_NM_NM AS CUST_NM_NM,
			CUST_ID AS CN_CUST_ID,
			CUST_NM_TYP_CD AS CN_CUST_NM_TYP_CD,
			CUST_NM_EFF_DT AS CN_CUST_NM_EFF_DT,
			CUST_NM_END_DT AS CN_CUST_NM_END_DT,
			AUDIT_USER_CREA_DTM AS CN_AUDIT_USER_CREA_DTM,
			VOID_IND AS CN_VOID_IND 
			from      LOGIC_CN
        ),
RENAME_SSRD as ( SELECT CUST_SOC_SEC_RET_DTL_DT AS CUST_SOC_SEC_RET_DTL_DT,
			CUST_ID AS SSRD_CUST_ID,
			VOID_IND AS SSRD_VOID_IND 
			from      LOGIC_SSRD
        ),
RENAME_DB as ( SELECT 
			B_BLK_ID AS DOCUMENT_BLOCK_IND,
			CUST_ID AS DB_CUST_ID,
			BLK_TYP_CD AS DB_BLK_TYP_CD,
			BLK_EFF_DT AS DB_BLK_EFF_DT,		
			BLK_END_DT AS DB_BLK_END_DT,
			VOID_IND AS DB_VOID_IND 
			from      LOGIC_DB
        ),
RENAME_TB as ( SELECT 
			B_BLK_ID AS THREAT_BEHAVIOR_BLOCK_IND,
			CUST_ID AS TB_CUST_ID,
			BLK_TYP_CD AS TB_BLK_TYP_CD,
			BLK_EFF_DT AS TB_BLK_EFF_DT,
			BLK_END_DT AS TB_BLK_END_DT,
			VOID_IND AS TB_VOID_IND 
			from      LOGIC_TB
        ),
RENAME_PA as ( SELECT 
			CUST_ADDR_STR_1 AS PHYSICAL_STREET_ADDRESS_1,
			CUST_ADDR_STR_2 AS PHYSICAL_STREET_ADDRESS_2,
			CUST_ADDR_CITY_NM AS PHYSICAL_ADDRESS_CITY_NAME,
			STT_ABRV AS PHYSICAL_ADDRESS_STATE_CODE,
			STT_NM AS PHYSICAL_ADDRESS_STATE_NAME,
			CUST_ADDR_POST_CD AS PHYSICAL_ADDRESS_POSTAL_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN LEFT(CUST_ADDR_POST_CD, 5) ||'-'|| RIGHT(CUST_ADDR_POST_CD, 4)
				WHEN LENGTH(CUST_ADDR_POST_CD) = 6 AND CNTRY_NM = 'CANADA' 
					THEN LEFT(CUST_ADDR_POST_CD, 3) ||' '|| RIGHT(CUST_ADDR_POST_CD, 3)
				ELSE CUST_ADDR_POST_CD END AS PHYSICAL_FORMATTED_ADDRESS_POSTAL_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN LEFT(CUST_ADDR_POST_CD, 5) ELSE CUST_ADDR_POST_CD END AS PHYSICAL_FORMATTED_ADDRESS_ZIP_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN RIGHT(CUST_ADDR_POST_CD, 4)  END AS PHYSICAL_FORMATTED_ADDRESS_ZIP4_CODE,
			CUST_ADDR_CNTY_NM AS PHYSICAL_ADDRESS_COUNTY_NAME,
			CNTRY_NM AS PHYSICAL_ADDRESS_COUNTRY_NAME,
			CUST_ADDR_VLDT_IND AS PHYSICAL_ADDRESS_VALIDATED_IND,
			CUST_ADDR_COMT AS PHYSICAL_ADDRESS_COMMENT_TEXT,
			CUST_ADDR_EFF_DATE AS PHYSICAL_ADDRESS_EFFECTIVE_DATE,
			CUST_ADDR_END_DATE AS PHYSICAL_ADDRESS_END_DATE,
			CUST_ID AS PA_CUST_ID,
			CUST_ADDR_TYP_CD AS PA_CUST_ADDR_TYP_CD,
			AUDIT_USER_CREA_DTM AS PA_AUDIT_USER_CREA_DTM,
			VOID_IND AS PA_VOID_IND 
			from      LOGIC_PA
        ),
RENAME_MA as ( SELECT 
			CUST_ADDR_STR_1 AS MAILING_STREET_ADDRESS_1,
			CUST_ADDR_STR_2 AS MAILING_STREET_ADDRESS_2,
			CUST_ADDR_CITY_NM AS MAILING_ADDRESS_CITY_NAME,
			STT_ABRV AS MAILING_ADDRESS_STATE_CODE,
			STT_NM AS MAILING_ADDRESS_STATE_NAME,
			CUST_ADDR_POST_CD AS MAILING_ADDRESS_POSTAL_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN LEFT(CUST_ADDR_POST_CD, 5) ||'-'|| RIGHT(CUST_ADDR_POST_CD, 4)
				WHEN LENGTH(CUST_ADDR_POST_CD) = 6 AND CNTRY_NM = 'CANADA' 
					THEN LEFT(CUST_ADDR_POST_CD, 3) ||' '|| RIGHT(CUST_ADDR_POST_CD, 3)
				ELSE CUST_ADDR_POST_CD END AS MAILING_FORMATTED_ADDRESS_POSTAL_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN LEFT(CUST_ADDR_POST_CD, 5) ELSE CUST_ADDR_POST_CD END AS MAILING_FORMATTED_ADDRESS_ZIP_CODE,
			CASE WHEN LENGTH(CUST_ADDR_POST_CD) = 9 AND CNTRY_NM = 'UNITED STATES'
					THEN RIGHT(CUST_ADDR_POST_CD, 4)  END AS MAILING_FORMATTED_ADDRESS_ZIP4_CODE,
						
			CUST_ADDR_CNTY_NM AS MAILING_ADDRESS_COUNTY_NAME,
			CNTRY_NM AS MAILING_ADDRESS_COUNTRY_NAME,
			CUST_ADDR_VLDT_IND AS MAILING_ADDRESS_VALIDATED_IND,
			CUST_ADDR_COMT AS MAILING_ADDRESS_COMMENT_TEXT,
			CUST_ADDR_EFF_DATE AS MAILING_ADDRESS_EFFECTIVE_DATE,
			CUST_ADDR_END_DATE AS MAILING_ADDRESS_END_DATE,
			CUST_ID AS MA_CUST_ID,
			CUST_ADDR_TYP_CD AS MA_CUST_ADDR_TYP_CD,
			AUDIT_USER_CREA_DTM AS MA_AUDIT_USER_CREA_DTM,
			VOID_IND AS MA_VOID_IND 
			from      LOGIC_MA
        ),
RENAME_CL as ( SELECT LANG_TYP_NM AS LANG_TYP_NM,
			CUST_LANG_PRI_IND AS CL_CUST_LANG_PRI_IND,
			VOID_IND AS CL_VOID_IND,
			CUST_ID AS CL_CUST_ID 
			from      LOGIC_CL
        ),
RENAME_PH as ( SELECT 
		  CUST_ID                                            as                                         PH_CUST_ID
		, PRSN_DEATH_DATE                                    as                                 PH_PRSN_DEATH_DATE
		, HIST_EFF_DTM                                       as                                   DEATH_ENTRY_DATE
 
				FROM     LOGIC_PH   )		
----FILTER LAYER(uses aliases)----
,

        FILTER_PRSN as ( SELECT  * 
			from     RENAME_PRSN 
            
        ),

        FILTER_PTCP as ( SELECT  * 
			from     RENAME_PTCP 
            WHERE PTCP_TYP_CD = 'CLMT'
        ),

        FILTER_CN as ( SELECT  * 
			from     RENAME_CN 
            WHERE CN_CUST_NM_TYP_CD = 'PRSN_NM' AND CN_VOID_IND = 'N' AND CN_CUST_NM_END_DT IS NULL
			QUALIFY (ROW_NUMBER() OVER (PARTITION BY CN_CUST_ID ORDER BY CN_AUDIT_USER_CREA_DTM DESC)) = 1
        ),

        FILTER_MA as ( SELECT  * 
			from     RENAME_MA 
            WHERE MA_CUST_ADDR_TYP_CD = 'MAIL' AND MA_VOID_IND = 'N' 
			AND CURRENT_DATE BETWEEN MAILING_ADDRESS_EFFECTIVE_DATE AND COALESCE(MAILING_ADDRESS_END_DATE ,'12/31/2999'::DATE)			
			QUALIFY (ROW_NUMBER() OVER(PARTITION BY MA_CUST_ID ORDER BY MAILING_ADDRESS_EFFECTIVE_DATE DESC, MA_AUDIT_USER_CREA_DTM DESC)) =1
        ),

        FILTER_PA as ( SELECT  * 
			from     RENAME_PA 
            WHERE PA_CUST_ADDR_TYP_CD = 'PHYS' AND PA_VOID_IND = 'N' 
			AND CURRENT_DATE BETWEEN PHYSICAL_ADDRESS_EFFECTIVE_DATE AND COALESCE(PHYSICAL_ADDRESS_END_DATE ,'12/31/2999'::DATE)
			QUALIFY (ROW_NUMBER() OVER(PARTITION BY PA_CUST_ID ORDER BY PHYSICAL_ADDRESS_EFFECTIVE_DATE DESC, PA_AUDIT_USER_CREA_DTM DESC)) =1
        ),

        FILTER_SSRD as ( SELECT  * 
			from     RENAME_SSRD 
            WHERE SSRD_VOID_IND = 'N'
			QUALIFY (ROW_NUMBER() OVER (PARTITION BY SSRD_CUST_ID ORDER BY CUST_SOC_SEC_RET_DTL_DT DESC)) = 1
        ),

        FILTER_DB as ( SELECT  * 
			from     RENAME_DB 
            WHERE DB_BLK_TYP_CD in ('ALL_DOCM_BLK', 'CLM_DOCM_BLK', 'PLCY_DOCM_BLK') AND DB_VOID_IND = 'N' AND coalesce(DB_BLK_END_DT, '2999-12-31') >= current_date
			QUALIFY (ROW_NUMBER() OVER (PARTITION BY DB_CUST_ID ORDER BY DB_BLK_EFF_DT ASC)) = 1
        ),

        FILTER_TB as ( SELECT  * 
			from     RENAME_TB 
            WHERE TB_BLK_TYP_CD = 'ALERT' AND TB_VOID_IND = 'N' AND COALESCE(TB_BLK_END_DT, '2999-12-31') >= current_date
			QUALIFY (ROW_NUMBER() OVER (PARTITION BY TB_CUST_ID ORDER BY TB_BLK_EFF_DT ASC)) = 1
        ),

        FILTER_CL as ( SELECT  * 
			from     RENAME_CL 
            WHERE CL_CUST_LANG_PRI_IND='Y' AND CL_VOID_IND = 'N'
        ),
        FILTER_PH as ( SELECT PH_CUST_ID, PH_PRSN_DEATH_DATE,
		                min(greatest(DEATH_ENTRY_DATE,PH_PRSN_DEATH_DATE)) as DEATH_ENTRY_DATE

		    from    RENAME_PH 
            WHERE PH_PRSN_DEATH_DATE IS NOT NULL 
			group by 1, 2 )

----JOIN LAYER----
,
PRSN as ( SELECT * 
			from  FILTER_PRSN
				INNER JOIN FILTER_PTCP ON FILTER_PRSN.CUST_ID = FILTER_PTCP.PTCP_CUST_ID 
				LEFT JOIN FILTER_CN ON FILTER_PRSN.CUST_ID = FILTER_CN.CN_CUST_ID 
				LEFT JOIN FILTER_MA ON FILTER_PRSN.CUST_ID = FILTER_MA.MA_CUST_ID 
				LEFT JOIN FILTER_PA ON FILTER_PRSN.CUST_ID = FILTER_PA.PA_CUST_ID 
				LEFT JOIN FILTER_SSRD ON FILTER_PRSN.CUST_ID = FILTER_SSRD.SSRD_CUST_ID 
				LEFT JOIN FILTER_DB ON FILTER_PRSN.CUST_ID = FILTER_DB.DB_CUST_ID 
				LEFT JOIN FILTER_TB ON FILTER_PRSN.CUST_ID = FILTER_TB.TB_CUST_ID 
				LEFT JOIN FILTER_CL ON FILTER_PRSN.CUST_ID = FILTER_CL.CL_CUST_ID  
				LEFT JOIN FILTER_PH ON  FILTER_PRSN.CUST_ID =  FILTER_PH.PH_CUST_ID  
				                      AND FILTER_PRSN.PRSN_DEATH_DATE=FILTER_PH.DEATH_ENTRY_DATE)

-- ETL layer for creating UNIQUE_ID_KEY
,
ETL1 as (
	SELECT md5(cast(
    
    coalesce(cast(CUST_ID as 
    varchar
), '')

 as 
    varchar
)) as UNIQUE_ID_KEY,
			CUST_ID,
			CUST_NO,
			CUST_NM_TTL_TYP_NM,
			CUST_NM_FST,
			CUST_NM_MID,
			CUST_NM_LST,
			CUST_NM_SFX_TYP_NM,
			CUST_NM_NM,
			CUST_FRGN_CITZ_IND,
			GNDR_TYP_CD,
			GNDR_TYP_NM,
			MAR_STS_TYP_CD,
			MAR_STS_TYP_NM,
			PRSN_BIRTH_DATE,
			PRSN_DEATH_DATE,
			CUST_SOC_SEC_RET_DTL_DT,
			CASE WHEN (DOCUMENT_BLOCK_IND) is not null THEN 'Y' ELSE 'N' END AS DOCUMENT_BLOCK_IND,
			CASE WHEN (THREAT_BEHAVIOR_BLOCK_IND) is not null THEN 'Y' ELSE 'N' END AS THREAT_BEHAVIOR_BLOCK_IND,
			PHYSICAL_STREET_ADDRESS_1,
			PHYSICAL_STREET_ADDRESS_2,
			PHYSICAL_ADDRESS_CITY_NAME,
			PHYSICAL_ADDRESS_STATE_CODE,
			PHYSICAL_ADDRESS_STATE_NAME,
			PHYSICAL_ADDRESS_POSTAL_CODE,
			PHYSICAL_FORMATTED_ADDRESS_POSTAL_CODE,
			PHYSICAL_FORMATTED_ADDRESS_ZIP_CODE,
			PHYSICAL_FORMATTED_ADDRESS_ZIP4_CODE,			
			PHYSICAL_ADDRESS_COUNTY_NAME,
			PHYSICAL_ADDRESS_COUNTRY_NAME,
			PHYSICAL_ADDRESS_VALIDATED_IND,
			PHYSICAL_ADDRESS_COMMENT_TEXT,
			PHYSICAL_ADDRESS_EFFECTIVE_DATE,
			PHYSICAL_ADDRESS_END_DATE, 
			MAILING_STREET_ADDRESS_1,
			MAILING_STREET_ADDRESS_2,
			MAILING_ADDRESS_CITY_NAME,
			MAILING_ADDRESS_STATE_CODE,
			MAILING_ADDRESS_STATE_NAME,
			MAILING_ADDRESS_POSTAL_CODE,
			MAILING_FORMATTED_ADDRESS_POSTAL_CODE,
			MAILING_FORMATTED_ADDRESS_ZIP_CODE,
			MAILING_FORMATTED_ADDRESS_ZIP4_CODE,
			MAILING_ADDRESS_COUNTY_NAME,
			MAILING_ADDRESS_COUNTRY_NAME,
			MAILING_ADDRESS_VALIDATED_IND,
			MAILING_ADDRESS_COMMENT_TEXT,
			MAILING_ADDRESS_EFFECTIVE_DATE,
			MAILING_ADDRESS_END_DATE,
			PTCP_TYP_NM,
			LANG_TYP_NM,
			CL_CUST_LANG_PRI_IND,
			CL_VOID_IND,
			CL_CUST_ID,
			PTCP_CUST_ID,
			PTCP_TYP_CD,
			MA_CUST_ID,
			MA_CUST_ADDR_TYP_CD,
			MA_AUDIT_USER_CREA_DTM,
			MA_VOID_IND,
			PA_CUST_ID,
			PA_CUST_ADDR_TYP_CD,
			PA_AUDIT_USER_CREA_DTM,
			PA_VOID_IND,
			SSRD_CUST_ID,
			SSRD_VOID_IND,
			DB_CUST_ID,
			DB_BLK_TYP_CD,
			DB_BLK_END_DT,
			DB_VOID_IND,
			TB_CUST_ID,
			TB_BLK_TYP_CD,
			TB_BLK_END_DT,
			TB_VOID_IND,
			CN_CUST_ID,
			CN_CUST_NM_TYP_CD,
			CN_CUST_NM_EFF_DT,
			CN_CUST_NM_END_DT,
			CN_AUDIT_USER_CREA_DTM,
			CN_VOID_IND,
			DEATH_ENTRY_DATE

	  from PRSN
)

SELECT * FROM ETL1
      );
    